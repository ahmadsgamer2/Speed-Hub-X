do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then v25=function()local v39=0 -0 ;local v40;local v41;local v42;local v43;local v44;local v45;while true do if (v39==(858 -(466 + 392))) then v40=v24();v41=v24();v39=1 + 0 ;end if (v39==(6 -(5 -2))) then if (v44==(0 + (0 -0))) then if (v43==(0 + 0)) then return v45 * (0 + 0) ;else local v102=1772 -(279 + 1493) ;while true do if (v102==(0 + 0)) then v44=(113 + 194) -(26 + 280) ;v42=1399 -(622 + 777) ;break;end end end elseif (v44==(3811 -(680 + 1084))) then return ((v43==0) and (v45 * ((1 + 0)/(0 -0)))) or (v45 * NaN) ;end return v8(v45,v44-(1054 -(26 + 5)) ) * (v42 + (v43/((4 -2)^((357 + 1603) -(597 + 1311))))) ;end if (v39==(1 + 0)) then v42=3 -2 ;v43=(v21(v41,2 -1 ,11 + 9 ) * ((1052 -(921 + 129))^(7 + 25))) + v40 ;v39=2 + 0 ;end if ((295 -(116 + 177))==v39) then v44=v21(v41,328 -(233 + 74) ,1127 -((225 -83) + 954) );v45=((v21(v41,(191 -(12 + 89)) -58 )==(1 -0)) and  -(3 -2)) or (1137 -(178 + 958)) ;v39=9 -6 ;end end end;v26=nil;v26=function(v31)local v46=0 -0 ;local v47;local v48;while true do if (v46==(2 + 0)) then v48={};for v77=1 -0 , #v47 do v48[v77]=v2(v1(v3(v47,v77,v77)));end v46=1 + 2 ;end if (v46==(1 -0)) then v47=v3(v16,v19,(v19 + v31) -(1025 -(540 + 73 + 411)) );v19=v19 + v31 ;v46=2;end if (v46==(3 + 0)) then return v6(v48);end if ((1071 -(338 + 733))==v46) then v47=nil;if  not v31 then v31=v24();if (v31==(0 -0)) then return "";end end v46=1;end end end;v27=v24;v18=4;end if (v18==4) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v49=0 + 0 ;local v50;local v51;local v52;local v53;local v54;local v55;local v56;local v57;while true do if ((4 + 0)==v49) then while true do if (v50~=(472 -(215 + 255))) then else local v96=0 -0 ;while true do if (v96==(796 -(733 + 62))) then v50=3;break;end if (0~=v96) then else v55=nil;v56=nil;v96=846 -(359 + 486) ;end end end if (v50==1) then v53=nil;v54=nil;v50=2;end if ((0 + 0)~=v50) then else v51=0 -0 ;v52=nil;v50=1;end if (v50~=3) then else v57=nil;while true do local v103=0;local v104;local v105;while true do if (v103~=(0 + 0)) then else v104=1300 -(665 + 635) ;v105=nil;v103=1;end if (v103==(1 -0)) then while true do if (v104~=(0 -0)) then else v105=0;while true do if (0~=v105) then else local v112=0;while true do if ((1 -0)==v112) then v105=941 -(789 + 151) ;break;end if (v112==0) then if (v51~=(1 + 0)) then else local v116=0 + 0 ;while true do if (2==v116) then v51=2;break;end if (v116==(1 + 0)) then local v122=0;while true do if (v122==0) then for v247=1 + 0 ,v56 do local v248=0 + 0 ;local v249;local v250;local v251;while true do if ((0 -0)==v248) then local v278=0;local v279;while true do if (v278==(0 -0)) then v279=0 -0 ;while true do if ((0 -0)==v279) then local v351=0 + 0 ;while true do if (1==v351) then v279=1;break;end if (v351==0) then v249=0;v250=nil;v351=1;end end end if (v279~=(1716 -(1025 + 690))) then else v248=1;break;end end break;end end end if (v248~=1) then else v251=nil;while true do if (v249==(0 -0)) then local v313=1888 -(332 + 1556) ;local v314;while true do if (v313==0) then v314=0 + 0 ;while true do if (1~=v314) then else v249=1;break;end if ((0 + 0)==v314) then local v385=0;local v386;while true do if (0==v385) then v386=0 -0 ;while true do if (0==v386) then local v422=1702 -(394 + 1308) ;while true do if (v422==(0 + 0)) then v250=v22();v251=nil;v422=1;end if (1==v422) then v386=1 -0 ;break;end end end if (1~=v386) then else v314=1387 -(1166 + 220) ;break;end end break;end end end end break;end end end if ((2 -1)~=v249) then else if (v250==1) then v251=v22()~=(0 + 0) ;elseif (v250==(2 + 0)) then v251=v25();elseif (v250~=(5 -2)) then else v251=v26();end v57[v247]=v251;break;end end break;end end end v55[11 -8 ]=v22();v122=1 + 0 ;end if (v122==1) then v116=1 + 1 ;break;end end end if (v116==(1752 -(973 + 779))) then v56=v24();v57={};v116=2 -1 ;end end end if (v51~=2) then else local v117=0;local v118;local v119;while true do if (v117==(0 + 0)) then v118=0 -0 ;v119=nil;v117=1;end if (v117==1) then while true do if (v118==(772 -(236 + 536))) then v119=0 + 0 ;while true do local v252=1453 -(751 + 702) ;local v253;while true do if (v252==(1668 -(1402 + 266))) then v253=0;while true do if (v253==0) then if (v119~=0) then else local v337=1733 -(1304 + 429) ;while true do if (v337==(0 + 0)) then for v387=1 + 0 ,v24() do local v388=0 -0 ;local v389;local v390;local v391;local v392;while true do if (v388~=(0 + 0)) then else v389=0 + 0 ;v390=nil;v388=1 + 0 ;end if (v388==(3 -1)) then while true do if (v389==(1483 -(770 + 713))) then local v423=0;while true do if (1==v423) then v389=1 -0 ;break;end if (v423==0) then v390=0;v391=nil;v423=1;end end end if (v389==(2 -1)) then v392=nil;while true do if (0~=v390) then else local v426=997 -(490 + 507) ;while true do if (v426~=(528 -(281 + 247))) then else v391=1089 -(518 + 571) ;v392=nil;v426=1;end if (v426==1) then v390=1 + 0 ;break;end end end if (v390==1) then while true do if (v391==0) then v392=v22();if (v21(v392,46 -(24 + 21) ,1699 -(1498 + 200) )==(0 -0)) then local v430=0 -0 ;local v431;local v432;local v433;local v434;local v435;local v436;while true do if (v430==(8 -5)) then while true do if (v431==2) then v436=nil;while true do if (v432==(0 + 0)) then local v439=1461 -(1180 + 281) ;local v440;while true do if (0==v439) then v440=0 -0 ;while true do if (v440==(1 -0)) then v432=1 + 0 ;break;end if (v440~=(0 + 0)) then else v433=0;v434=nil;v440=1;end end break;end end end if (v432==1) then local v441=0;while true do if (v441==(0 + 0)) then v435=nil;v436=nil;v441=1;end if ((1843 -(879 + 963))~=v441) then else v432=2;break;end end end if (v432==(2 + 0)) then while true do if (v433==(4 -2)) then local v442=0;local v443;while true do if (v442==(0 -0)) then v443=0 + 0 ;while true do if (v443~=(0 -0)) then else local v451=0;local v452;while true do if (v451~=0) then else v452=941 -(356 + 585) ;while true do if (v452==(0 + 0)) then local v457=0 + 0 ;while true do if (v457==1) then v452=35 -(8 + 26) ;break;end if (v457~=0) then else if (v21(v435,2 -1 ,1)~=(2 -1)) then else v436[2 + 0 ]=v57[v436[1 + 1 ]];end if (v21(v435,650 -(572 + 76) ,7 -5 )~=(1743 -(1021 + 721))) then else v436[3 + 0 ]=v57[v436[3]];end v457=1;end end end if ((960 -(781 + 178))~=v452) then else v443=1;break;end end break;end end end if (v443~=(425 -(374 + 50))) then else v433=3;break;end end break;end end end if (v433==3) then if (v21(v435,3 + 0 ,3)==1) then v436[667 -(251 + 412) ]=v57[v436[525 -(428 + 93) ]];end v52[v387]=v436;break;end if ((1298 -(185 + 1113))~=v433) then else local v445=0 -0 ;local v446;while true do if (v445~=(861 -(343 + 518))) then else v446=1978 -(826 + 1152) ;while true do if (v446~=0) then else local v453=1702 -(257 + 1445) ;while true do if (v453~=(0 + 0)) then else v434=v21(v392,1915 -(481 + 1432) ,2 + 1 );v435=v21(v392,14 -10 ,20 -14 );v453=1;end if (v453==(71 -(47 + 23))) then v446=698 -(556 + 141) ;break;end end end if (v446~=(2 -1)) then else v433=1 + 0 ;break;end end break;end end end if ((1 + 0)==v433) then local v447=0;local v448;while true do if (v447~=0) then else v448=98 -(95 + 3) ;while true do if (v448==(1 + 0)) then v433=2;break;end if (v448==0) then local v454=833 -(622 + 211) ;while true do if (v454==(0 -0)) then v436={v23(),v23(),nil,nil};if (v434==(0 -0)) then local v455=0;local v456;while true do if (0~=v455) then else v456=0;while true do if ((0 + 0)~=v456) then else v436[3]=v23();v436[11 -7 ]=v23();break;end end break;end end elseif (v434==1) then v436[1528 -(598 + 927) ]=v24();elseif (v434==2) then v436[780 -(92 + 685) ]=v24() -(2^(52 -36)) ;elseif (v434==(11 -8)) then local v466=0;local v467;local v468;while true do if (v466~=1) then else while true do if (v467==(0 + 0)) then v468=0;while true do if (v468==(0 -0)) then v436[3]=v24() -(2^(13 + 3)) ;v436[7 -3 ]=v23();break;end end break;end end break;end if (v466==0) then v467=0;v468=nil;v466=1;end end end v454=1;end if (v454==1) then v448=1896 -(681 + 1214) ;break;end end end end break;end end end end break;end end break;end if (v431==(2 -1)) then local v437=0;while true do if (0~=v437) then else v434=nil;v435=nil;v437=1 + 0 ;end if (1==v437) then v431=2;break;end end end if (v431==(573 -(118 + 455))) then local v438=0 -0 ;while true do if (v438~=(4 -3)) then else v431=1;break;end if (v438==0) then v432=1109 -(197 + 912) ;v433=nil;v438=1;end end end end break;end if (v430==1) then v433=nil;v434=nil;v430=1 + 1 ;end if (v430~=(0 + 0)) then else v431=0;v432=nil;v430=1;end if (v430==2) then v435=nil;v436=nil;v430=3;end end end break;end end break;end end break;end end break;end if (v388==1) then v391=nil;v392=nil;v388=5 -3 ;end end end for v393=1715 -(818 + 896) ,v24() do v53[v393-(1577 -(1433 + 143)) ]=v29();end v337=1;end if (v337~=1) then else v119=1 + 0 ;break;end end end if (v119==(1 + 0)) then local v338=0;while true do if (v338~=0) then else for v395=1,v24() do v54[v395]=v24();end return v55;end end end break;end end break;end end end break;end end break;end end end v112=1944 -(799 + 1144) ;end end end if (v105==(1944 -(1337 + 606))) then if (v51==(0 + 0)) then local v113=0 + 0 ;local v114;local v115;while true do if (v113==1) then while true do if (0==v114) then v115=1848 -(1042 + 806) ;while true do if (v115==2) then v51=2 -1 ;break;end if (v115==(1 + 0)) then local v152=0;while true do if (v152~=(1 -0)) then else v115=1 + 1 ;break;end if (v152~=(0 -0)) then else v54={};v55={v52,v53,nil,v54};v152=873 -(11 + 861) ;end end end if (v115==0) then v52={};v53={};v115=3 -2 ;end end break;end end break;end if (0~=v113) then else v114=0 + 0 ;v115=nil;v113=1;end end end break;end end break;end end break;end end end break;end end break;end if (v49==(766 -(289 + 477))) then v50=0 -0 ;v51=nil;v49=1 -0 ;end if (v49==1) then v52=nil;v53=nil;v49=2;end if (2==v49) then v54=nil;v55=nil;v49=3;end if (v49==3) then v56=nil;v57=nil;v49=1 + 3 ;end end end;v18=5;end if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v32)if (v1(v32,2)==79) then local v69=0;while true do if (0==v69) then v20=v0(v3(v32,1,1));return "";end end else local v70=v2(v0(v32,16));if v20 then local v79=0;local v80;while true do if (0==v79) then v80=v5(v70,v20);v20=nil;v79=1;end if (1==v79) then return v80;end end else return v70;end end end);v21=nil;v18=1;end if (v18==1) then v21=function(v33,v34,v35)if v35 then local v71=(v33/((1651 -(896 + 753))^(v34-(663 -(494 + (2032 -(1076 + 788)))))))%((3 -1)^(((v35-(1 + 0)) -(v34-((1 -0) + 0))) + 1 + 0 + 0)) ;return v71-(v71%(1 + 0)) ;else local v72=0;local v73;while true do if (v72==(0 -0)) then v73=2^(v34-(1 + 0)) ;return (((v33%(v73 + v73))>=v73) and (1852 -(197 + 1654))) or ((812 -(383 + 429)) -0) ;end end end end;v22=nil;v22=function()local v58=v1(v16,v19,v19);v19=v19 + 1 ;return v58;end;v23=nil;v18=2;end if (2==v18) then v23=function()local v59,v60=v1(v16,v19,v19 + (1455 -(1219 + 234)) );v19=v19 + 2 ;return (v60 * (747 -491)) + v59 ;end;v24=nil;v24=function()local v61,v62,v63,v64=v1(v16,v19,v19 + 2 + 1 );v19=v19 + 3 + 1 ;return (v64 * 16777216) + (v63 * (22160 + 43376)) + (v62 * (9 + 247)) + v61 ;end;v25=nil;v18=3;end if (v18==5) then v30=nil;v30=function(v36,v37,v38)local v65=0;local v66;local v67;local v68;while true do if (v65==1) then v68=v36[3];return function(...)local v81=1;local v82= -1;local v83={...};local v84=v12("#",...) -1 ;local function v85()local v86=v66;local v87=v67;local v88=v68;local v89=v28;local v90={};local v91={};local v92={};for v97=1611 -(386 + 1225) ,v84 do if (((374 + 86)<(698 + 2494)) and (v97>=v88)) then v90[v97-v88 ]=v83[v97 + 1 + 0 ];else v92[v97]=v83[v97 + ((352 + 1315) -(645 + 1021)) ];end end local v93=(v84-v88) + 1 + 0 ;local v94;local v95;while true do local v98=1252 -(705 + 547) ;local v99;local v100;while true do if ((v98==(1 + 0)) or ((5243 -(1664 + 96))<(461 -(209 + 49)))) then while true do if ((v99==(0 -0)) or (1074>(2764 + 1975))) then v100=0;while true do if ((v100==(3 -2)) or (649>=(9492 -4582))) then if ((v95<=(1760 -(318 + 1418))) or (1249>=(11200 -6284))) then if ((v95<=(2 + 9)) or ((6074 -(1442 + (301 -145)))>=(4902 -(90 + 233)))) then if ((v95<=(813 -((1681 -(426 + 457)) + (41 -31)))) or ((1085 + 938)==(1940 + 1478))) then if (((3977 -1289)>=(1936 -(164 + 15))) and (v95<=(2 + 0))) then if (((2561 -(186 + 180))>(3297 -(669 + 517))) and (v95<=((0 -0) -0))) then if ( not v92[v94[2 + 0 ]] or (3400<=(5728 -3176))) then v81=v81 + ((671 + 66) -(254 + (886 -(271 + 133)))) ;else v81=v94[3 + 0 ];end elseif ((v95>1) or ((2824 + 321)<(4109 -(441 + 1339)))) then v92[v94[1 + 1 ]]=v92[v94[13 -(6 + 4) ]][v94[15 -11 ]];else v92[v94[2 + 0 ]][v94[2 + 1 ]]=v94[281 -(65 + 212) ];end elseif ((v95<=(4 -1)) or ((1847 + 460)>=(5240 -2297))) then if (((5276 -(581 + 451))>(7807 -5981)) and (v94[4 -2 ]==v92[v94[8 -4 ]])) then v81=v81 + (3 -2) ;else v81=v94[5 -2 ];end elseif (((5021 -(290 + 427))>(110 + 1023)) and (v95==(9 -5))) then if ((v92[v94[(33 -25) -6 ]]==v92[v94[10 -6 ]]) or (((874 + 5925) -3315)<(1860 -(511 + 1014)))) then v81=v81 + 1 + 0 ;else v81=v94[3 + 0 ];end else local v159=386 -(319 + 67) ;local v160;local v161;local v162;while true do if ((v159==(1044 -(474 + 569))) or ((1352 + 898)>=(7204 -(8643 -6056)))) then v162=nil;while true do if (((3633 -(55 + 935 + 229))>=(7 + 9)) and (v160==(0 + 0))) then v161=0 + 0 ;v162=nil;v160=(912 -(717 + 194)) -0 ;end if (((4034 -2124)<=((6980 -3506) -(107 + 99))) and (1==v160)) then while true do if ((v161==(0 -0)) or (((5052 -3509) + 641)>(6786 -3866))) then v162=v94[930 -(801 + 127) ];do return v92[v162](v13(v92,v162 + 1 + 0 ,v94[3 + 0 ]));end break;end end break;end end break;end if (((2879 -(213 + 1752))==((750 -(60 + 38)) + 262)) and (v159==(0 + 0))) then v160=0 -0 ;v161=nil;v159=(9 -6) -2 ;end end end elseif (((924 -446)==(1315 -837)) and (v95<=(1412 -(968 + 436)))) then if ((v95<=((6 + 6) -6)) or (2724<(1077 -589))) then v92[v94[5 -3 ]]=v37[v94[5 -2 ]];elseif ((v95>(4 + (1255 -(62 + 1190)))) or ((1611 -1020)>=(7731 -3881))) then v92[v94[505 -(449 + (532 -(127 + 351))) ]][v94[683 -(642 + 38) ]]=v92[v94[1855 -(424 + 1427) ]];else v92[v94[2 -0 ]]={};end elseif (((5457 -(199 + 387))>(2084 + 679)) and (v95<=(480 -(98 + 373)))) then local v125=0 -0 ;local v126;local v127;local v128;while true do if (((133 + 1707)==(3095 -(155 + 1100))) and (v125==1)) then v128=nil;while true do if (((3 -2)==v126) or ((1754 + (1225 -(154 + 594)))<=(385 + 904))) then for v291=v127 + 1 + 0 ,v94[1178 -(1001 + 174) ] do v7(v128,v92[v291]);end break;end if ((v126==(617 -(212 + 405))) or ((3537 -(103 + 217))>(6255 -(1031 + 942)))) then local v280=0 -(0 -0) ;local v281;while true do if ((v280==(1651 -(797 + 854))) or ((16081 -11472)<(9042 -5740))) then v281=91 -(21 + 70) ;while true do if ((v281==(1 -0)) or ((710 + 238 + 3086)<(2287 + 35))) then v126=1;break;end if ((((1321 + 1094) -631)>=(1620 -470)) and (v281==(0 -0))) then local v352=913 -(33 + 0 + 880) ;while true do if (((532 + 78)==(547 + 63)) and (v352==(1 -0))) then v281=1 + 0 ;break;end if ((v352==0) or (((1544 + 909) -(115 + 189))>=(4003 -(920 + 290)))) then v127=v94[1759 -(1408 + 349) ];v128=v92[v127];v352=324 -(190 + 133) ;end end end end break;end end end end break;end if (((142 + 26 + 164)<(2837 -(15 + 28))) and (v125==(0 -0))) then local v254=0 + 0 ;while true do if ((v254==(1693 -(1608 + 84))) or ((1387 -(413 + 941))==(628 -(155 + 36)))) then v125=1156 -(854 + 301) ;break;end if (((408 -(88 + 320))==v254) or ((5512 -2764)<=(1138 -(84 + 656)))) then v126=0;v127=nil;v254=3 -2 ;end end end end elseif ((v95==(28 -(1 + 17))) or ((469 + 2369)<(1471 -(20 + 742)))) then v92[v94[1379 -(1003 + 374) ]]=v94[3];else v92[v94[(3 -1) -0 ]]=v92[v94[9 -6 ]]%v94[6 -2 ] ;end elseif (((710 + (2281 -(765 + 583)))>(1654 -(230 + 2))) and (v95<=(1092 -(373 + 702)))) then if ((v95<=(13 + 1)) or ((3201 -(916 + 46))<=((4125 -1954) -(410 + 56)))) then if ((v95<=(1883 -(131 + 1740))) or ((691 + 4295)<=((971 + 3946) -(578 + 104)))) then local v129=0 + 0 ;local v130;while true do if (((17875 -14135)<=(13671 -8982)) and ((0 -0)==v129)) then v130=v94[1620 -(724 + 894) ];v92[v130]=v92[v130](v92[v130 + (463 -(356 + 106)) ]);break;end end elseif (((751 + 30)==(1139 -(171 + 187))) and (v95>(7 + 6))) then v92[v94[1 + 0 + 1 ]][v92[v94[1620 -(494 + 1123) ]]]=v92[v94[2 + 2 + 0 ]];else local v171=0 + (1138 -(13 + 1125)) ;local v172;while true do if (((0 -0)==v171) or ((7205 -(158 + 5311))<=(2257 -1358))) then v172=v94[7 -5 ];v92[v172]=v92[v172](v13(v92,v172 + 1 + 0 ,v94[14 -11 ]));break;end end end elseif ((v95<=(7 + 8)) or ((5729 -3729)>=(2626 + 628))) then v92[v94[7 -5 ]]=v92[v94[1110 -(364 + 743) ]] + v94[4] ;elseif ((v95>(29 -13)) or ((5724 -4508)>(4360 -(603 + 104)))) then local v173=0 + 0 ;local v174;local v175;local v176;local v177;local v178;while true do if (((15808 -11697)<(2835 + 1278)) and ((1642 -(1342 + 298))==v173)) then v178=nil;while true do if ((v174==(6 -4)) or ((3964 -(283 + 431))<(34 + 396))) then while true do if (((1 + 0)==v175) or (((1926 -(23 + 25)) -(443 + 915))>(4183 -2749))) then v178=v92[v176 + (393 -(111 + 280)) ];if (((1294 + 860)==((1600 -(507 + 334)) + 1395)) and (v178>(545 -(490 + 55)))) then if ((v177>v92[v176 + (1913 -(1737 + 175)) ]) or ((3405 -(633 + 992 + 254))<=(258 + (1713 -(516 + 82))))) then v81=v94[1810 -(1603 + 204) ];else v92[v176 + 2 + 1 ]=v177;end elseif (((2344 -1027)==(162 + 55 + 1100)) and (v177<v92[v176 + (1766 -((848 -(518 + 236)) + 1671)) ])) then v81=v94[1 + 2 ];else v92[v176 + (1453 -(843 + 607)) ]=v177;end break;end if (((252 -139)==113) and (v175==(616 -((1773 -(55 + 1246)) + 144)))) then local v341=0 -0 ;while true do if (((5201 -(1339 + 127))>=((2044 + 1569) -(200 + 218 + 538))) and (v341==(638 -(592 + 46)))) then local v381=108 -(4 + 104) ;while true do if (((0 -0)==v381) or ((416 + 96)>=((293 -152) + (6103 -(567 + 1006))))) then v176=v94[8 -6 ];v177=v92[v176];v381=556 -(21 + 534) ;end if ((v381==(1 -0)) or ((10160 -6662)<=(236 + 89))) then v341=1628 -(726 + 901) ;break;end end end if ((v341==(2 -1)) or (1429>=(286 + 1322))) then v175=1 -0 ;break;end end end end break;end if ((v174==((5314 -4160) -(899 + 255))) or ((1663 + 1039)<=(727 + 184))) then v175=334 -(243 + 91) ;v176=nil;v174=1 + 0 + 0 ;end if ((v174==(1885 -(1105 + 440 + 339))) or ((6522 -(5329 -1481))<=(121 + 1300))) then local v294=0 + 0 ;while true do if ((v294==(2 -1)) or ((15645 -11587)==(43 + 74 + 46))) then v174=1264 -(796 + 466) ;break;end if ((v294==(0 + 0)) or ((12471 -9104)<=(1248 -(68 + 260)))) then v177=nil;v178=nil;v294=977 -(780 + 196) ;end end end end break;end if (((251 + 2049)==(3749 -(792 + 657))) and (v173==((5353 -3724) -(1367 + 262)))) then v174=0 -0 ;v175=nil;v173=2 -1 ;end if ((v173==(4 -3)) or ((3131 -(208 + 91))>((10495 -3966) -3437))) then v176=nil;v177=nil;v173=3 -1 ;end end elseif ((383<=(1471 + 2274)) and v92[v94[3 -(1953 -(40 + 1912)) ]]) then v81=v81 + ((484 -282) -(136 + 65)) ;else v81=v94[4 -1 ];end elseif ((v95<=20) or ((1412 + 2046 + 1170)==((6668 -3574) -(1022 + 462)))) then if (((766 + 2524)>=(1001 + (464 -204))) and (v95<=(788 -(344 + 426)))) then v92[v94[1 + 1 ]]=v94[180 -(13 + 128 + 36) ] + v92[v94[(388 -(205 + 180)) + 1 ]] ;elseif ((v95==(45 -26)) or ((7161 -4525)>=(6474 -3378))) then local v179=0 -0 ;local v180;while true do if ((v179==0) or ((2525 -1296)>(872 + 2001))) then v180=v94[1 + 1 ];v92[v180](v13(v92,v180 + 1 + 0 ,v82));break;end end else local v181=0 -(0 -0) ;local v182;while true do if ((v181==(1949 -(1777 + 172))) or ((1863 -(211 + 1170))>(1230 + 2234))) then v182=v92[v94[9 -5 ]];if (((144 + 5)==((2046 -(1478 + 371)) -(25 + 20 + 3))) and  not v182) then v81=v81 + (987 -(381 + 605)) ;else local v292=0 -0 ;local v293;while true do if ((((1822 -(28 + 166)) -(954 + 109))<=(8634 -4667)) and (v292==(0 + 0))) then v293=20 -(19 + 1 + 0) ;while true do if (((310 -200)==110) and (v293==(841 -(360 + 481)))) then v92[v94[1999 -(774 + 1223) ]]=v182;v81=v94[1210 -(107 + 1100) ];break;end end break;end end end break;end end end elseif (((255 + 1931)<=(6378 -(4518 -(1477 + 116)))) and (v95<=(18 + 4))) then if ((v95==(35 -14)) or ((4035 -(66 + (211 -108)))<(6171 -3019))) then v92[v94[2]]=v94[(3597 -2111) -(20 + 1463) ]~=(0 -0) ;else local v184=1940 -(1704 + (1967 -(1376 + 355))) ;local v185;local v186;local v187;local v188;while true do if ((v184==(0 -0)) or ((3602 -2098)==(2674 -505))) then v185=v94[126 -(78 + 46) ];v186,v187=v89(v92[v185](v92[v185 + (3 -2) ]));v184=1099 -(317 + 781) ;end if (((2201 + 26)<(1311 + 754 + 1675)) and (v184==(642 -(50 + (1091 -501))))) then for v282=v185,v82 do local v283=0 + 0 ;local v284;while true do if ((((0 -0) -0)==v283) or ((2745 -((1064 -632) + 80))>(2948 + 613))) then v284=0 + 0 ;while true do if ((v284==(1819 -(735 + 1084))) or ((1850 -(49 + 425))==((693 -(300 + 352)) + 5))) then v188=v188 + ((1861 -(1433 + 136)) -(76 + 215)) ;v92[v282]=v186[v188];break;end end break;end end end break;end if (((3932 -(717 + 997))>=(43 + 64)) and (v184==(1 + 0))) then v82=(v187 + v185) -(1940 -(26 + 1913)) ;v188=574 -(132 + 442) ;v184=1604 -(198 + 1404) ;end end end elseif (((1966 + 187)<(13636 -(9626 -(39 + 802)))) and (v95>(11 + 12))) then v92[v94[(2811 -1607) -(1131 + 71) ]]();else v38[v94[(10 -6) -1 ]]=v92[v94[2 + 0 ]];end elseif ((v95<=(72 -36)) or ((3797 -(1045 + 236))<(594 + 74))) then if ((v95<=(242 -(117 + 95))) or ((3658 + 465)>=(6600 -(78 + 1600)))) then if (((2803 -1965)<4656) and (v95<=(23 + 4))) then if (((3002 + 1508)>(1375 + 23)) and (v95<=(475 -(77 + 373)))) then local v133=0 + 0 ;local v134;local v135;while true do if (((527 -(9 + 349 + 168))==v133) or ((5820 -2028)<(5073 -(1783 + 215)))) then while true do if ((v134==(0 + 0)) or ((1882 -(465 + 421))==(2132 + 624))) then v135=v94[2 + (0 -0) ];v92[v135]=v92[v135]();break;end end break;end if (((4786 -(878 + 780))>(2996 -(991 + 986))) and (v133==(791 -(226 + 565)))) then v134=0 + 0 ;v135=nil;v133=1 -0 ;end end elseif ((1332<=((6278 -2443) -(1211 + 714))) and (v95==(101 -75))) then local v191=1901 -(1808 + 93) ;local v192;local v193;while true do if (((9549 -5485)>=(4421 -1352)) and (v191==((498 + 610) -(239 + 868)))) then while true do if (((510 + 738)<=(7040 -2879)) and (v192==0)) then v193=v94[(355 -(101 + 248)) -(6 -2) ];v92[v193](v92[v193 + (657 -(151 + 6 + 499)) ]);break;end end break;end if ((v191==((0 + 0) -0)) or ((4729 -(233 + 853))<(951 + 35))) then local v271=0 + 0 ;while true do if (((3869 -2117)==(5851 -4099)) and (v271==(0 -0))) then v192=(694 -(404 + 290)) + 0 ;v193=nil;v271=201 -(175 + 25) ;end if ((v271==(3 -2)) or ((2184 -(269 + 67))>(626 + (3846 -(442 + 445))))) then v191=1 + 0 ;break;end end end end else local v194=0 -0 ;local v195;while true do if ((v194==(0 -0)) or ((5872 -3574)<(1705 + 75))) then v195=v94[2 + 0 ];v92[v195](v13(v92,v195 + 1 + 0 ,v94[1252 -(447 + 802) ]));break;end end end elseif (((1257 -805)<1041) and (v95<=(6 + 22))) then for v149=v94[1 + 1 ],v94[3] do v92[v149]=nil;end elseif ((v95>(550 -(365 + 156))) or ((3730 -(1096 + 582))>(4885 -(145 + 1437)))) then v92[v94[1 + 1 ]]=v92[v94[2 + 1 ]];else local v198=0;local v199;local v200;local v201;local v202;while true do if (((11839 -(9292 -(902 + 232)))<=(2726 + (2966 -753))) and (v198==(944 -(337 + 595 + 10)))) then while true do if ((v199==(0 + 0 + 0)) or ((7264 -4562)==(568 -288))) then v200=v94[779 -(765 + 12) ];v201=v92[v200 + (8 -6) ];v199=2 -1 ;end if ((v199==(7 -5)) or ((6221 -3810)==(2247 + 557))) then if ((v201>((2666 -(369 + 302)) -(1511 + 480 + 4))) or ((1679 -(1137 + 519))>=400)) then if ((v202<=v92[v200 + (1 -0) ]) or ((2138 -(163 + 13 + 197))<=((2849 -(448 + 138)) -((1947 -1210) + 439)))) then local v355=0 -0 ;while true do if ((v355==(0 -0)) or ((4793 -1656)<(7609 -4703))) then v81=v94[7 -4 ];v92[v200 + 1 + 2 ]=v202;break;end end end elseif ((v202>=v92[v200 + (1 -0) ]) or (((14191 -9479) + (161 -83))<(6342 -(60 + 1509)))) then local v356=0 + 0 ;local v357;local v358;while true do if (((4457 -(553 + (2220 -(1334 + 451))))>=(4017 -(706 + 876))) and (v356==(1 + 0 + (1107 -(466 + 641))))) then while true do if (((2551 -(285 + 983))>=(3687 -2543)) and (v357==(1141 -(1092 + 49)))) then v358=0 + (306 -(180 + 126)) ;while true do if (((577 + (328 -232))==(649 + 24)) and ((0 -0)==v358)) then v81=v94[3 + 0 ];v92[v200 + (932 -(248 + 681)) ]=v202;break;end end break;end end break;end if ((v356==0) or ((5190 -(1056 + 2653))>=(4309 -(581 + 110)))) then v357=0 + 0 ;v358=nil;v356=1 -0 ;end end end break;end if ((v199==(1083 -(821 + 261))) or ((5071 -(733 + 743))<((1592 -800) -(275 + 500)))) then v202=v92[v200] + v201 ;v92[v200]=v202;v199=290 -(152 + 136) ;end end break;end if (((2703 -966)==(3070 -1333)) and (v198==(0 -(1990 -(1604 + 386))))) then v199=1779 -(1509 + 270) ;v200=nil;v198=1 + 0 ;end if (((10688 -6204)>=(5229 -4072)) and (v198==(1 + (0 -0)))) then v201=nil;v202=nil;v198=5 -3 ;end end end elseif ((v95<=(140 -(32 + 75))) or ((2085 -((106 -56) + (1051 -(736 + 75))))==(4326 -(27 + 18)))) then if ((v95<=(514 -(285 + 198))) or (((4007 -(103 + 456)) + 121)==(4941 -(101 + 23 + 251)))) then v92[v94[(3 -2) + 1 ]]=v92[v94[3]] -v94[3 + 1 ] ;elseif ((((17139 -4147) -9370)<=(18341 -14381)) and (v95>(22 + 10))) then v92[v94[567 -(319 + 76 + 170) ]]= #v92[v94[5 -2 ]];else local v204=1439 -(52 + 1387) ;local v205;local v206;while true do if (((6213 -3155)<=(12422 -8191)) and (v204==(0 + 0))) then local v273=0 -0 ;while true do if (((10845 -6569)==(8484 -4208)) and (v273==(880 -(428 + 452)))) then v205=v94[894 -(669 + 223) ];v206={};v273=1585 -(1466 + 118) ;end if (((2 -1)==v273) or ((408 + 2318 + 112)<(179 + 822))) then v204=1 -(937 -(811 + 126)) ;break;end end end if (((3750 -1533)>=(905 -328)) and (v204==(1 -0))) then for v287=(4 + 0) -3 , #v91 do local v288=907 -(749 + 100 + 58) ;local v289;local v290;while true do if ((((1120 + 1935) -(369 + 49))==(2832 -(193 + (4 -2)))) and ((0 -0)==v288)) then v289=0 -0 ;v290=nil;v288=1 + 0 ;end if (((7795 -4617)<=(63 + 4484)) and (v288==(670 -(538 + 131)))) then while true do if (((6323 -(1327 + 97))>(2739 -1726)) and ((0 -(0 + 0))==v289)) then v290=v91[v287];for v374=858 -(259 + 599) , #v290 do local v375=0 -0 ;local v376;local v377;local v378;while true do if (((239 + 447)==(2865 -2179)) and (v375==(0 + 0))) then v376=v290[v374];v377=v376[3 -(4 -2) ];v375=1324 -(1104 + 219) ;end if ((((5563 -4450) + 1865)<=(5368 -(769 + 779))) and (v375==1)) then v378=v376[4 -2 ];if ((((10141 + 807) -6771)==(244 + 233 + 3700)) and (v377==v92) and (v378>=v205)) then local v414=0 -0 ;local v415;local v416;while true do if ((v414==((1317 -(192 + 1124)) + 0)) or ((494 + 3959)==((1796 -843) + 392))) then while true do if (((3512 -2229)==(2772 -(1286 + 203))) and (v415==(0 -0))) then v416=0 -0 ;while true do if ((v416==(1252 -(251 + 1001))) or ((6640 -(268 + 1375))<=((13214 -(1590 + 111)) -9004))) then v206[v378]=v377[v378];v376[(455 + 1012) -(1287 + (330 -151)) ]=v206;break;end end break;end end break;end if ((v414==(0 + 0)) or ((1442 -652)>(1191 + (857 -(139 + 633))))) then v415=0 + 0 ;v416=nil;v414=1 + 0 ;end end end break;end end end break;end end break;end end end break;end end end elseif (((2398 -(20 + 913))<(4370 + 240)) and (v95<=(43 -9))) then v92[v94[(11 -5) -4 ]]=v38[v94[1 + 2 ]];elseif ((v95==(4 + 31)) or ((2117 -846)>(3078 + 713))) then local v207=0 -0 ;local v208;local v209;local v210;local v211;local v212;while true do if ((v207==(1 + 1 + 0)) or ((2626 -(822 + 507))>=(1298 + 1011))) then v212=nil;while true do if (((3000 -(458 + 298))<(1120 + 1202)) and ((1852 -(872 + 978))==v208)) then for v316=v209,v82 do local v317=(1085 -(69 + 660)) -(95 + 261) ;while true do if ((((868 -(686 + 125)) + 503)>(806 -(154 + 278))) and (v317==(0 + 0))) then v212=v212 + (1891 -(1764 + 126)) ;v92[v316]=v210[v212];break;end end end break;end if ((v208==0) or ((2117 + 491)>=(908 + 2713))) then v209=v94[2 + (0 -0) ];v210,v211=v89(v92[v209](v13(v92,v209 + (1066 -(832 + 233)) ,v82)));v208=426 -(50 + 375) ;end if (((2508 -1323)<=(4065 -(56 + (2416 -749)))) and (v208==(1 + (972 -(897 + 75))))) then v82=(v211 + v209) -(2 -1) ;v212=1782 -(1360 + 422) ;v208=4 -2 ;end end break;end if (((5699 -(565 + 676))>(1855 -746)) and (v207==(1 + 0))) then v210=nil;v211=nil;v207=1603 -(910 + 691) ;end if ((v207==(0 + 0)) or ((12666 -(9822 -(83 + 1561)))<(6040 -3109))) then v208=0 -0 ;v209=nil;v207=2 -1 ;end end else v81=v94[12 -9 ];end elseif ((v95<=(780 -(661 + (1958 -(650 + 1231))))) or ((2144 + 149)==(6830 -5059))) then if ((v95<=(1181 -(1033 + 109))) or ((460 -(163 + 111))>4337)) then if ((v95<=(9 + 28)) or ((3399 -(476 + 271))>(1425 + 1507))) then local v139=0 -0 ;local v140;local v141;local v142;local v143;while true do if ((4715==((4567 -(346 + 371)) + 865)) and ((0 + (493 -(407 + 86)))==v139)) then v140=0 -0 ;v141=nil;v139=1;end if (((4016 -(68 + 315))==(4570 -(7 + 930))) and (v139==(8 -6))) then while true do if (((1267 -(188 + 217))==(1637 -(590 + 185))) and ((0 -0)==v140)) then v141=0 -0 ;v142=nil;v140=1 + 0 ;end if ((v140==((3 -1) -1)) or ((827 + 1852)==((3023 -(724 + 975)) + 1609))) then v143=nil;while true do if ((v141==(1 + 0)) or ((4973 -3864)<=(193 -66))) then for v335=v142 + 1 ,v94[(361 -(350 + 4)) -3 ] do v143=v143   .. v92[v335] ;end v92[v94[1710 -(308 + 1400) ]]=v143;break;end if ((v141==(0 -(0 -0))) or ((2975 -(746 + 1135))>(8505 -4954))) then local v319=0;local v320;while true do if (((0 -(0 + 0))==v319) or ((2311 -(1536 + 278))>=(3161 -(460 + 964)))) then v320=686 -(366 + 320) ;while true do if ((v320==(164 -(67 + 96))) or ((3014 -(173 + 1044))>(5080 -(1653 + (17 -11))))) then v141=1 -0 ;break;end if (((1199 + 2525)>=(21 + 130 + 570)) and (v320==(0 + 0))) then local v405=0 + 0 ;while true do if (((11466 -8573)==(4250 -((2157 -(267 + 1100)) + 567))) and (v405==(922 -(95 + 152 + 675)))) then v142=v94[(9 + 202) -(122 + 86) ];v143=v92[v142];v405=(1 -0) + 0 ;end if ((v405==(1 + 0)) or ((13061 -8652)<=(391 + 146))) then v320=1 -0 ;break;end end end end break;end end end end break;end end break;end if ((v139==(139 -(48 + 90))) or (((3855 + 172) -(799 + 999))>=(17 + 14 + 4017))) then v142=nil;v143=nil;v139=109 -(28 + 79) ;end end elseif ((v95>(38 + 0)) or ((4192 -1482)>=(1389 + 1898))) then v92[v94[2 + 0 ]]=v30(v87[v94[335 -((534 -372) + 170) ]],nil,v38);else local v215=1888 -(1001 + 887) ;local v216;local v217;local v218;local v219;while true do if ((v215==(8 -6)) or (749<=(160 + 401))) then while true do if (((9649 -6647)>(451 + 1698)) and (v216==(736 -(326 + 410)))) then local v301=0 -0 ;while true do if ((v301==(909 -(610 + 299))) or ((64 + 82)<=(477 -(37 + 367)))) then v217=v87[v94[2 + 1 ]];v218=nil;v301=2 -(653 -(382 + 270)) ;end if ((v301==(4 -3)) or ((2717 + 2125)<(5630 -3305))) then v216=1 + 0 ;break;end end end if ((v216==(3 -1)) or ((2986 -(156 + 7 + 1))<(248 -157))) then for v321=335 -(313 + 21) ,v94[4 + (630 -(549 + 81)) ] do local v322=0 + 0 ;local v323;while true do if ((v322==(0 + 0)) or ((2757 -(689 + 233))==(6425 -(1317 + 142)))) then v81=v81 + (112 -(4 + 107)) + 0 ;v323=v86[v81];v322=1 + 0 ;end if ((v322==(170 -(147 + 22))) or ((6551 -(5369 -1418))>(6122 -(333 + 40 + 1320)))) then if (((3928 -(402 + 1072))<(1365 + 2431)) and (v323[1146 -(1114 + 31) ]==(6 + 8 + 16))) then v219[v321-(955 -(616 + 338)) ]={v92,v323[1 + 2 ]};else v219[v321-(1 + 0) ]={v37,v323[1 + 2 ]};end v91[ #v91 + (370 -((629 -(305 + 3)) + 48)) ]=v219;break;end end end v92[v94[1 + 1 ]]=v30(v217,v218,v38);break;end if ((v216==(2 -1)) or ((3452 + 618)==(425 + 951))) then v219={};v218=v10({},{__index=function(v303,v304)local v324=0 + 0 ;local v325;local v326;while true do if ((((1826 -(578 + 990)) -200)<=(2298 + 249)) and ((1 -0)==v324)) then while true do if (((3570 -(64 + (1917 -(250 + 1062))))<(2823 + 753)) and ((0 -(0 -0))==v325)) then local v406=0 -0 ;while true do if (((578 + (4578 -1930))<(675 + 3823)) and (v406==(0 + 0))) then v326=v219[v304];return v326[1689 -((80 -53) + 1661) ][v326[2]];end end end end break;end if ((v324==(0 + 0)) or ((1046 -(885 + 148))>2650)) then v325=(0 -0) + 0 ;v326=nil;v324=1;end end end,__newindex=function(v303,v304,v305)local v327=0 + 0 ;local v328;local v329;while true do if ((v327==(1292 -(1227 + (102 -38)))) or ((71 + (1018 -345))>((4911 -(844 + 998)) -601))) then while true do if (((614 + 802)>(189 + 59)) and (v328==0)) then v329=v219[v304];v329[1 + 0 ][v329[3 -1 ]]=v305;break;end end break;end if (((8610 -6428)<=(13900 -9376)) and (v327==(1270 -(1093 + 177)))) then v328=0 + 0 ;v329=nil;v327=1986 -(1640 + 345) ;end end end});v216=(1069 -(1037 + 29)) -(1 -0) ;end end break;end if (((3053 + 1257)<=(6500 -1861)) and (v215==(1296 -((955 -(348 + 112)) + 800)))) then v218=nil;v219=nil;v215=4 -(324 -(115 + 207)) ;end if ((v215==(0 + 0)) or ((3154 -2132)>(3993 -(764 + 367)))) then v216=0 + 0 + 0 ;v217=nil;v215=4 -3 ;end end end elseif (((3564 -(433 + 327))>(2481 -(138 + 1435))) and (v95<=(9 + 31))) then local v144=0 -0 ;local v145;while true do if (((2325 -1417)<(2538 + 373)) and (v144==0)) then v145=v94[2 + 0 ];do return v13(v92,v145,v82);end break;end end elseif ((v95>(1044 -(231 + 35 + 737))) or ((7263 -4299)>=(8933 -5791))) then do return;end else local v220=0 + 0 ;local v221;local v222;local v223;local v224;local v225;local v226;while true do if (((4000 -(1370 + 389))==((7367 + 630) -5756)) and (v220==(11 -8))) then while true do if ((v221==(1 + 0)) or ((2403 -(181 + 396 + 15 + 358))<=((2604 -(8 + 11)) -(367 + (2095 -(166 + 676)))))) then local v306=0;while true do if ((79<(5291 -2035)) and (v306==(1914 -(72 + 1841)))) then v221=1407 -(1273 + 132) ;break;end if ((v306==(0 -0)) or (((12809 -3930) -4666)<(3294 -(1197 + 396)))) then v224=v222 + (6 -4) ;v225={v92[v222](v92[v222 + 1 + 0 ],v92[v224])};v306=4 -3 ;end end end if (((1819 -1069)==(607 + 143)) and (v221==(1025 -(838 + 185)))) then local v307=0 -0 ;while true do if ((((29 + 2879) -1116)<=(6207 -(1140 + 747))) and (v307==((2127 -(624 + 309)) -(86 + 1108)))) then for v364=284 -(101 + (1302 -(700 + 420))) ,v223 do v92[v224 + v364 ]=v225[v364];end v226=v225[1 + 0 ];v307=1 -0 ;end if ((v307==(1 + 0)) or ((2351 + 2032)==(202 + 491))) then v221=1 + 2 ;break;end end end if (((5268 -2440)>(2191 -1150)) and ((1445 -(628 + 817))==v221)) then local v308=0;while true do if ((v308==(1 -0)) or ((2367 -(229 + 32))<(236 + 1104))) then v221=990 -(861 + 128) ;break;end if ((v308==(0 + 0)) or ((737 + (4253 -(207 + 650)))>=(5423 -(246 + 527 + 51)))) then v222=v94[497 -(57 + 438) ];v223=v94[1 + 3 ];v308=367 -(128 + 238) ;end end end if ((v221==((8 -5) -(0 -0))) or ((5083 -(91 + 114))==(798 -(184 + 61)))) then if (((691 + 1717)>1574) and v226) then local v336=0 + (0 -0) ;while true do if ((v336==(230 -(185 + 45))) or ((2468 -(1642 + 23))==(2628 -(537 + 341)))) then v92[v224]=v226;v81=v94[1953 -(1628 + 322) ];break;end end else v81=v81 + (859 -(563 + 295)) ;end break;end end break;end if (((2864 -(27 + 710))>=(1810 -(73 + 518))) and (v220==(1810 -(276 + 1534)))) then v221=1011 -(656 + 355) ;v222=nil;v220=1 + 0 ;end if ((v220==(374 -(111 + 262))) or ((2429 -1631)>(5060 -((1762 -1318) + 1178)))) then v223=nil;v224=nil;v220=1 + 1 ;end if (((3734 -(418 + 283))<=((4873 -(57 + 94)) -(34 + 24))) and (v220==(2 -0))) then v225=nil;v226=nil;v220=3 -0 ;end end end elseif ((v95<=(1357 -(707 + 605))) or ((4064 -2678)>(5610 -(359 + 793)))) then if ((v95<=(2009 -(802 + 1164))) or ((6042 -2935)<=(345 + 2015))) then local v146=0 + 0 ;local v147;local v148;while true do if ((((0 -0) + 0)==v146) or ((2805 -1614)<(2297 -(5972 -4679)))) then v147=v94[1 + 1 ];v148=v92[v94[(1902 -498) -(1136 + 265) ]];v146=1 -0 ;end if (((5397 -(429 + 1329))>=(5963 -3568)) and (v146==1)) then v92[v147 + (3 -2) ]=v148;v92[v147]=v148[v94[4 + 0 ]];break;end end elseif ((v95==((1242 -(621 + 540)) -(62 -(10 + 15)))) or ((10246 -7348)<=(3980 -1843))) then v92[v94[2 + 0 ]]=v92[v94[2 + 0 + 1 ]]%v92[v94[19 -15 ]] ;else local v228=0 + 0 ;local v229;local v230;local v231;local v232;while true do if (((4694 -(360 + 337))==(5068 -(205 + (2412 -1546)))) and (v228==(587 -((1300 -915) + 201)))) then local v274=(1373 + 606) -(214 + 1765) ;while true do if ((v274==(2 -1)) or ((1561 + 847)<(2325 -(793 + 392)))) then v228=524 -(435 + 87) ;break;end if (((260 -(120 + 112))<(10438 -6047)) and (v274==(427 -(190 + 237)))) then v231=nil;v232=nil;v274=3 -2 ;end end end if ((v228==(0 -0)) or ((215 + (112 -64))>=(9230 -4570))) then local v275=0 + 0 ;while true do if ((v275==(1018 -(523 + 166 + 328))) or ((853 -631)>=(1204 + 1977))) then v228=132 -(113 + 18) ;break;end if ((v275==(0 -0)) or ((1111 -(62 + 68))>=(2246 -(73 + 1120)))) then v229=0 -0 ;v230=nil;v275=3 -2 ;end end end if ((((2078 -(41 + 750)) + (2030 -(831 + 122)))<(470 + 1919)) and ((4 -2)==v228)) then while true do if ((v229==(1 + 0)) or (3743<=(352 + (6459 -3361)))) then v232=v94[8 -5 ];for v330=1 + 0 ,v232 do v231[v330]=v92[v230 + v330 ];end break;end if (((5732 -3766)==(5730 -3764)) and (v229==(0 -(158 -(113 + 45))))) then local v310=(0 -0) -0 ;while true do if ((v310==(1668 -(1509 + 159))) or ((1030 + (3397 -1874))==(584 + 2714))) then v230=v94[1 + 1 ];v231=v92[v230];v310=317 -(227 + 89) ;end if ((v310==(2 -1)) or ((4412 + 159)<=(5417 -4074))) then v229=2 -1 ;break;end end end end break;end end end elseif ((v95<=(372 -(16 + 309))) or (3463<=(2782 -675))) then if ((v95==(144 -98)) or ((5310 -((2264 -(1096 + 419)) + 325))==(5064 -1246))) then local v233=0 -0 ;local v234;local v235;local v236;local v237;while true do if ((v233==(1 -0)) or (781>=1491)) then v236=nil;v237=nil;v233=1962 -(1094 + 866) ;end if (((3584 -2714)<(5835 -(949 + 575))) and (v233==(402 -(41 + 361)))) then v234=1148 -(943 + 205) ;v235=nil;v233=(3705 -(1444 + 382)) -(1111 + 767) ;end if ((v233==(2 + 0)) or ((2427 -1618)>=(1265 + 1945))) then while true do if ((4592>(2129 + 805)) and (v234==(0 + 0))) then local v311=0 + 0 ;while true do if (((284 + 3776)<=(612 + 4146)) and (v311==(1 -0))) then v234=1 + 0 ;break;end if (((1247 + 625)<=(3796 -(1485 + 114))) and (v311==((901 -(232 + 669)) -(0 -0)))) then v235=v94[1875 -(738 + (1811 -676)) ];v236={v92[v235](v92[v235 + 1 + 0 ])};v311=1 + 0 ;end end end if (((5514 -3583)<((16024 -12784) -(385 + 259))) and (v234==(1845 -(1416 + 428)))) then v237=0;for v333=v235,v94[12 -8 ] do local v334=(0 + 0) -0 ;while true do if (((5981 -(1014 + 105))>((2865 -(624 + 820)) -(198 + 292))) and (v334==((1311 -(67 + 1112)) -(35 + 97)))) then v237=v237 + 1 + 0 ;v92[v333]=v236[v237];break;end end end break;end end break;end end else local v238=177 -(111 + 66) ;local v239;local v240;local v241;local v242;local v243;local v244;while true do if (((385 + 1514)<=(2229 + 2655)) and ((2 + 1)==v238)) then while true do if (((1210 + 794 + (6704 -5194))>=(6733 -4863)) and (v239==(0 -0))) then local v312=0;while true do if ((v312==(2 -1)) or (((7507 -4043) -(6 + 34))<=(763 + 1071 + 251))) then v239=1 + 0 ;break;end if (((10339 -(5794 + 1458))<(14791 -9996)) and (v312==(1353 -(328 + (3829 -2804))))) then v240=0 -0 ;v241=nil;v312=1;end end end if ((v239==(1675 -(892 + 782))) or ((1052 -527)>=(6940 -3877))) then v242=nil;v243=nil;v239=(1908 -(526 + 1378)) -2 ;end if (((2782 + (443 -287))>(150 -81)) and (v239==(1 + 1))) then v244=nil;while true do if ((v240==(0 -0)) or (193>=(2405 -1067))) then local v349=1902 -((198 -126) + 1830) ;while true do if ((v349==(0 + 0)) or ((8 + 13)==(10975 -8549))) then v241=v94[489 -(187 + 300) ];v242,v243=v89(v92[v241](v13(v92,v241 + 1 + 0 ,v94[8 -5 ])));v349=2 -1 ;end if (((2104 -676)==(2364 -(116 + 820))) and ((1 + 0)==v349)) then v240=1;break;end end end if (((1554 -(1296 + (505 -249)))==v240) or ((756 + 359)==((2189 -(93 + 478)) -(234 + 86)))) then for v369=v241,v82 do local v370=0 -0 ;local v371;while true do if ((v370==(0 -0)) or ((2815 + 478)<=(2084 -902))) then v371=945 -(643 + 302) ;while true do if ((v371==(0 + 0)) or ((12189 -8260)<=(4679 -(151 + 1076)))) then v244=v244 + (1471 -(881 + 589)) ;v92[v369]=v242[v244];break;end end break;end end end break;end if (((1078 -(509 + 102))<=(4665 -(816 + 17 + 103))) and (v240==(1 + 0))) then local v350=(0 -0) + 0 ;while true do if ((((3328 -(472 + 182)) + 1542)==(10094 -5878)) and (v350==(0 + (1423 -(696 + 727))))) then v82=(v243 + v241) -(1099 -(34 + 240 + 824)) ;v244=0 + 0 ;v350=162 -(87 + 74) ;end if ((v350==(1 + 0 + 0)) or ((5616 -2507)<=(1785 + 4))) then v240=2 + 0 ;break;end end end end break;end end break;end if ((v238==(1 + 0)) or ((19040 -14935)<(4720 -(830 + 456 + 422)))) then v241=nil;v242=nil;v238=3 -1 ;end if (((12747 -8560)>=((4776 -(174 + 146)) -(970 + 57))) and (v238==(0 -0))) then v239=384 -(152 + 232) ;v240=nil;v238=2 -1 ;end if (((5110 -(342 + 1632))>(1754 + 654)) and (v238==(1669 -(1287 + 380)))) then v243=nil;v244=nil;v238=207 -(49 + 155) ;end end end elseif (((2085 -(38 + 693))<=(6123 -(1070 + 718))) and (v95>48)) then if ((1846<(7430 -5032)) and (v92[v94[2 -0 ]]==v94[1 + 3 ])) then v81=v81 + 1 + 0 + 0 ;else v81=v94[2 + 1 ];end else local v245=(1311 -(841 + 470)) -0 ;local v246;while true do if ((v245==(0 -0)) or ((9220 -4715)<(4161 -(209 + 598)))) then v246=v94[1 + 1 ];v92[v246]=v92[v246](v13(v92,v246 + 1 ,v82));break;end end end v81=v81 + 1 + 0 ;break;end if ((((5782 -(485 + 758)) -(255 + 1630))>=(2463 -(2141 -(284 + 166)))) and (v100==(0 + 0))) then local v110=0 -(0 + 0) ;local v111;while true do if ((v110==(1431 -((1937 -(1581 + 185)) + 1260))) or ((752 -(19 + 12))==(3909 -((90 -52) + 35)))) then v111=997 -(898 + 99) ;while true do if (((6679 -2109)>(5144 -(3473 -(432 + 1043)))) and (v111==(1 -0))) then v100=4 -3 ;break;end if (((3065 -2287)>(196 -92)) and (v111==(0 + 0))) then v94=v86[v81];v95=v94[1 + 0 + 0 ];v111=613 -(292 + 320) ;end end break;end end end end break;end end break;end if (((1429 + 1390)>(454 + 204 + 1206)) and ((0 -0)==v98)) then v99=0 -0 ;v100=nil;v98=3 -2 ;end end end end A,B=v28(v11(v85));if  not A[1] then local v101=v36[4][v81] or "?" ;error("Script error at ["   .. v101   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end if (v65==0) then v66=v36[1];v67=v36[2];v65=1;end end end;return v30(v29(),{},v17)(...);end end end vv9(),...);end
