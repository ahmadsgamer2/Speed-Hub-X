do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==4) then v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v82=v3(v1(v29,16));if v28 then local v100=v6(v82,v28);v28=nil;return v100;else return v82;end end end);local function v30(v31,v32,v33)if v33 then local v83=(v31/((1766 -(1408 + 356))^(v32-(3 -2))))%((1 + 1)^(((v33-(3 -2)) -(v32-((256 + 394) -(571 + 78)))) + (149 -((982 -(190 + 743)) + 99)))) ;return v83-(v83%(1 -(623 -(468 + 155)))) ;else local v84=(2 + 0)^(v32-1) ;return (((v31%(v84 + v84))>=v84) and (293 -(23 + 269))) or (0 + 0) ;end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + 2 + 0 );v27=v27 + 2 + 0 ;return (v49 * (968 -(619 + 93))) + v48 ;end local function v36()local v50=1211 -(21 + 1190) ;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v2(v25,v27,v27 + 1 + (4 -2) );v27=v27 + 4 + 0 ;v50=733 -(725 + 7) ;end if (v50==(1 + 0)) then return (v54 * (15875807 + 901409)) + (v53 * (225097 -159561)) + (v52 * (531 -275)) + v51 ;end end end local function v37()local v55=v36();local v56=v36();local v57=2 -1 ;local v58=(v30(v56,985 -(79 + 905) ,38 -18 ) * ((1 + (1 -0))^(1367 -(442 + (2718 -1825))))) + v55 ;local v59=v30(v56,21,10 + 21 );local v60=((v30(v56,7 + 18 + 7 )==(1 + 0)) and  -(1 + 0)) or (1 + 0) ;if (v59==((0 -0) + 0)) then if (v58==(0 -0)) then return v60 * (0 -0) ;else v59=720 -(446 + 273) ;v57=0 + 0 ;end elseif (v59==2047) then return ((v58==(0 + 0)) and (v60 * ((2 -1)/(0 + 0 + 0)))) or (v60 * NaN) ;end return v9(v60,v59-(1964 -(404 + 537)) ) * (v57 + (v58/((1 + 1)^(131 -79)))) ;end local function v38(v39)local v61;if  not v39 then v39=v36();if (v39==0) then return "";end end v61=v4(v25,v27,(v27 + v39) -(2 -1) );v27=v27 + v39 ;local v62={};for v75=1167 -(149 + 1017) , #v61 do v62[v75]=v3(v2(v4(v61,v75,v75)));end return v7(v62);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v63=1804 -(649 + 1155) ;local v64;local v65;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v63==4) then while true do if (v64==1) then v67=nil;v68=nil;v64=1 + 1 ;end if (v64~=(91 -(45 + 43))) then else v71=nil;while true do local v105=0;local v106;while true do if (0~=v105) then else v106=0 + 0 ;while true do if (v106~=(0 -0)) then else local v109=0;while true do if ((0 + 0)==v109) then if ((1273 -(365 + 908))~=v65) then else v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1 + 0 ;end if (v65~=(2 -1)) then else v70=v36();v71={};for v115=1,v70 do local v116=0;local v117;local v118;local v119;while true do if (v116==(0 -0)) then v117=0;v118=nil;v116=1 + 0 ;end if (v116==(170 -(31 + 138))) then v119=nil;while true do if (v117==1) then if (v118==(1420 -(964 + 455))) then v119=v34()~=0 ;elseif (v118==(3 -1)) then v119=v37();elseif (v118~=3) then else v119=v38();end v71[v115]=v119;break;end if (v117~=(0 -0)) then else v118=v34();v119=nil;v117=1;end end break;end end end v69[1199 -(392 + 804) ]=v34();v65=2;end v109=1 + 0 ;end if (v109~=(23 -(13 + 9))) then else v106=3 -2 ;break;end end end if (v106==1) then if (v65~=2) then else local v110=0;while true do if (0~=v110) then else for v120=1,v36() do local v121=0 + 0 ;local v122;local v123;local v124;while true do if (v121~=(2 -1)) then else v124=nil;while true do if (v122~=1) then else while true do if (v123==(0 + 0)) then v124=v34();if (v30(v124,1,3 -2 )==(0 -0)) then local v344=0 -0 ;local v345;local v346;local v347;while true do if (0~=v344) then else local v378=0 -0 ;local v379;while true do if (v378==(278 -(217 + 61))) then v379=1465 -(1009 + 456) ;while true do if (v379==(0 -0)) then v345=v30(v124,2,3);v346=v30(v124,4 + 0 ,1806 -(1597 + 203) );v379=535 -(226 + 308) ;end if (v379~=1) then else v344=1;break;end end break;end end end if (v344~=(1778 -(82 + 1695))) then else local v380=0;local v381;while true do if (v380~=0) then else v381=1116 -(271 + 845) ;while true do if (v381~=(1 + 0)) then else v344=2;break;end if (v381==0) then local v420=0;while true do if (v420~=1) then else v381=1;break;end if (v420~=(1587 -(158 + 1429))) then else v347={v35(),v35(),nil,nil};if (v345==0) then local v427=0 -0 ;local v428;local v429;while true do if (0==v427) then v428=0 -0 ;v429=nil;v427=1 + 0 ;end if (v427==(1 + 0)) then while true do if (v428==0) then v429=0 + 0 ;while true do if (v429~=(77 -(11 + 66))) then else v347[3 + 0 ]=v35();v347[3 + 1 ]=v35();break;end end break;end end break;end end elseif (v345==1) then v347[3]=v36();elseif (v345==2) then v347[8 -5 ]=v36() -((5 -3)^(36 -20)) ;elseif (v345~=3) then else local v435=0 -0 ;local v436;local v437;while true do if (v435==1) then while true do if (v436~=0) then else v437=0;while true do if (v437==0) then v347[3]=v36() -(2^16) ;v347[4]=v35();break;end end break;end end break;end if (v435==(0 -0)) then v436=0;v437=nil;v435=1;end end end v420=1 + 0 ;end end end end break;end end end if (v344==2) then local v382=0;while true do if (v382~=(598 -(83 + 514))) then else v344=5 -2 ;break;end if (v382~=(847 -(58 + 789))) then else if (v30(v346,1,1052 -(903 + 148) )==(380 -(282 + 97))) then v347[3 -1 ]=v71[v347[4 -2 ]];end if (v30(v346,2 + 0 ,1858 -(667 + 1189) )==1) then v347[13 -10 ]=v71[v347[3]];end v382=1;end end end if (v344~=3) then else if (v30(v346,3,3 + 0 )==(1 -0)) then v347[4]=v71[v347[4]];end v66[v120]=v347;break;end end end break;end end break;end if ((0 -0)==v122) then local v284=0;while true do if (v284==(495 -(422 + 72))) then v122=1276 -(877 + 398) ;break;end if (0==v284) then local v327=0 -0 ;while true do if (0~=v327) then else v123=0 -0 ;v124=nil;v327=1;end if (v327~=1) then else v284=288 -(136 + 151) ;break;end end end end end end break;end if ((1963 -(1504 + 459))~=v121) then else v122=0;v123=nil;v121=1 + 0 ;end end end for v125=1,v36() do v67[v125-1 ]=v42();end v110=214 -(81 + 132) ;end if (v110~=1) then else for v127=1,v36() do v68[v127]=v36();end return v69;end end end break;end end break;end end end break;end if (v64==0) then v65=0;v66=nil;v64=3 -2 ;end if (v64==(7 -5)) then v69=nil;v70=nil;v64=3;end end break;end if (v63==2) then v68=nil;v69=nil;v63=1 + 2 ;end if (v63==3) then v70=nil;v71=nil;v63=4;end if (v63~=(2 -1)) then else v66=nil;v67=nil;v63=2;end if (v63==0) then v64=0 + 0 ;v65=nil;v63=1;end end end local function v43(v44,v45,v46)local v72=v44[1];local v73=v44[2];local v74=v44[3];return function(...)local v77=1;local v78= -1;local v79={...};local v80=v13("#",...) -1 ;local function v81()local v85=v72;local v86=v73;local v87=v74;local v88=v41;local v89={};local v90={};local v91={};for v95=(522 -(278 + 244)) + 0 ,v80 do if (((3320 + 102)>2881) and (v95>=v87)) then v89[v95-v87 ]=v79[v95 + (2 -1) ];else v91[v95]=v79[v95 + 1 ];end end local v92=(v80-v87) + (4 -3) ;local v93;local v94;while true do local v96=0 -0 ;local v97;while true do if (((1501 + 207)>=(253 + 278)) and (v96==0)) then v97=0 + 0 ;while true do if ((v97==(0 + (118 -(43 + 75)))) or ((6406 -4074)>(4393 -(457 + (626 -393))))) then local v107=1967 -(870 + 1097) ;local v108;while true do if ((v107==((3303 -1915) -(272 + 1116))) or ((1308 + 956)<(1840 -(454 + 159)))) then v108=(0 + 0) -(0 + 0) ;while true do if (((5852 -4017)<=(842 + 2852)) and (v108==(753 -(399 + 354)))) then local v111=524 -(339 + 185) ;while true do if (((4923 -(91 + 42 + 5))==4785) and ((490 -(280 + 209))==v111)) then v108=1 + 0 ;break;end if (((1849 -(352 + 841))<=(4016 -((493 -180) + 426))) and (0==v111)) then v93=v85[v77];v94=v93[1 + 0 ];v111=2 -(1 + 0) ;end end end if (((1191 -(81 + 214))<(3160 -642)) and ((2 -1)==v108)) then v97=1;break;end end break;end end end if ((v97==((85 -(42 + 42)) -0)) or ((4000 -(377 + 1014))>(2618 + 1369))) then if (((2516 -(449 + 15))<(4956 -(809 + 510))) and (v94<=24)) then if (((1710 -((3065 -(1365 + 623)) + 496))==(681 -544)) and (v94<=(41 -(43 -13)))) then if (((625 + 286 + 2806)>(3938 -(850 + 264))) and (v94<=5)) then if (((2019 + 2832)>=(7487 -4639)) and (v94<=2)) then if (((1097 -252)==(1092 -(92 + 155))) and (v94<=(0 + 0 + 0))) then local v129=0 -0 ;local v130;local v131;local v132;local v133;local v134;while true do if ((0==v129) or (((2968 -(1388 + 386)) + 285)>(12319 -9045))) then v130=0 + 0 ;v131=nil;v129=(2 -1) + 0 ;end if ((v129==(1 + 0)) or ((4829 -(155 + 205))<=(195 + 350))) then local v248=0 -0 ;while true do if ((3780<=(5090 -(758 + 529))) and (((0 -0) -0)==v248)) then v132=nil;v133=nil;v248=1 + 0 ;end if (((2813 -(886 + 403))==(3502 -(753 + 1225))) and (v248==(1174 -(407 + 766)))) then v129=1995 -(1765 + 228) ;break;end end end if ((46<=(707 + 997)) and (v129==(1 + 1))) then v134=nil;while true do if ((v130==(2 -1)) or ((4488 + 118 + 157)<=(5 + 28))) then local v285=0 + (0 -0) ;local v286;while true do if ((v285==(873 -(415 + 458))) or ((3782 -994)<(7791 -5156))) then v286=0 + 0 ;while true do if ((v286==(0 + 0)) or (((2820 -(107 + 453)) + 848)<((3472 -(1835 + 133)) -((11 -3) + 917)))) then local v359=0;while true do if (((1149 -(307 + 841))==v359) or (3916<1681)) then v286=1682 -(1634 + 47) ;break;end if ((v359==(1529 -(562 + 601 + 366))) or ((3930 -2300)>((1125 -(52 + 50)) + 1216))) then v78=(v133 + v131) -(1413 -(269 + 1143)) ;v134=0;v359=2 -(1 + 0) ;end end end if (((4056 -(435 + 821))<=((22415 -11725) -7029)) and (v286==(3 -2))) then v130=1655 -(1547 + 106) ;break;end end break;end end end if (((0 -0)==v130) or ((5172 -(303 + 956))>=4357)) then local v287=0 -0 ;local v288;while true do if (((7554 -4159)<=(513 + 3302)) and (v287==0)) then v288=1477 -(531 + 946) ;while true do if ((v288==1) or ((791 + 750)>(6528 -3623))) then v130=1 + 0 ;break;end if ((v288==0) or ((3582 -1878)==(6782 -(149 + 1705)))) then local v360=0 -0 ;while true do if ((v360==(1866 -((4180 -2410) + 96))) or ((716 + 1037)==((11881 -(225 + 1078)) -6238))) then v131=v93[2 + 0 ];v132,v133=v88(v91[v131](v91[v131 + 1 + 0 ]));v360=1;end if ((v360==(1 -0)) or ((3637 -1370)>=2675)) then v288=1905 -(897 + 1007) ;break;end end end end break;end end end if ((v130==2) or ((204 + 363)>(797 + 86))) then for v301=v131,v78 do local v302=0 -0 ;local v303;local v304;while true do if (((3629 -2868)<=(553 + 4038)) and (v302==(833 -(93 + 740)))) then v303=0 -0 ;v304=nil;v302=1 + 0 ;end if ((((7166 -(1301 + 218)) -(1161 + 307))==(11081 -6902)) and (v302==((2519 -(1176 + 86)) -(816 + 440)))) then while true do if (((1519 -944)>((419 + 76) -268)) and (0==v303)) then v304=1173 -(417 + 756) ;while true do if ((v304==(0 + 0)) or ((4291 -(180 + 17))<((5707 -3350) -(514 + 805)))) then v134=v134 + 1 + 0 ;v91[v301]=v132[v134];break;end end break;end end break;end end end break;end end break;end end elseif ((v94>(478 -(60 + 417))) or ((4722 -(872 + 99))<3529)) then local v165=(1447 -(57 + 122)) -(233 + 1035) ;local v166;local v167;local v168;local v169;while true do if (((265 -(145 + 120))==v165) or ((4280 + 52)==(2079 -1385))) then local v268=0 + 0 ;while true do if (((1995 -(102 + 652))>=718) and (v268==0)) then v166=v93[3 -(1 -0) ];v167,v168=v88(v91[v166](v14(v91,v166 + (1671 -(1293 + 377)) ,v78)));v268=(4 -2) -1 ;end if (((48 + 2279)<=(13161 -9035)) and ((2 -1)==v268)) then v165=(463 + 278) -(42 + (3174 -2476)) ;break;end end end if ((v165==1) or ((4837 -2827)<=404)) then local v269=(269 -(81 + 188)) + 0 ;while true do if ((v269==(873 -(452 + 420))) or ((5603 -(1054 + 262))<=(622 + (1649 -(64 + 1102))))) then v165=2;break;end if ((v269==((0 + 0) -0)) or ((1816 -(242 + 131 + 48))<=(232 + 931))) then v78=(v168 + v166) -1 ;v169=0 + 0 ;v269=2 -1 ;end end end if (((6266 -(1920 + 1598))>=(1164 -(148 + 248))) and (v165==2)) then for v289=v166,v78 do local v290=(1239 -548) -(349 + 342) ;local v291;local v292;while true do if (((3824 -(152 + 11 + 216))<=4549) and (v290==(595 -(570 + 24)))) then while true do if ((3554>(3152 -(90 + 80))) and (v291==(0 -0))) then v292=0;while true do if ((932<2687) and (v292==(0 + 0))) then v169=v169 + (1 -0) + 0 ;v91[v289]=v167[v169];break;end end break;end end break;end if ((2728<=(8533 -4080)) and (v290==(0 -0))) then v291=0 -0 ;v292=nil;v290=2 -1 ;end end end break;end end else v91[v93[980 -(68 + 910) ]]=v91[v93[755 -(717 + 35) ]][v93[6 -2 ]];end elseif ((v94<=(1 + 2)) or (((15771 -11056) -(745 + 263))>(578 + 4365))) then local v135=0 + 0 ;local v136;local v137;local v138;while true do if ((v135==(2 -1)) or (879==2033)) then v138=nil;while true do if (((0 -0)==v136) or ((2245 -(16 + 1309))>((42466 -33704) -4241))) then local v293=0;while true do if ((v293==(1129 -(349 + 779))) or ((1095 -560)>(4666 -(662 + 738)))) then v136=430 -(259 + (338 -168)) ;break;end if ((v293==0) or (315>=(16873 -12511))) then v137=v93[2 + 0 ];v138=v91[v137];v293=3 -2 ;end end end if ((v136==1) or ((7714 -3475)<(141 + 74 + 1703))) then for v305=v137 + (1976 -(301 + (2221 -547))) ,v93[(22 -12) -(2 + 5) ] do v8(v138,v91[v305]);end break;end end break;end if (((13824 -8851)>=4727) and (v135==0)) then v136=1330 -((1227 -(183 + 269)) + (1428 -873)) ;v137=nil;v135=1 -0 ;end end elseif ((v94==(176 -(29 + 143))) or (739>1466)) then v46[v93[3 -0 ]]=v91[v93[2]];else for v249=v93[1 + 1 ],v93[3 + (0 -0) ] do v91[v249]=nil;end end elseif ((v94<=(7 + 1)) or ((2508 -1488)<(1025 -(278 + 51)))) then if ((308==(185 + 123)) and (v94<=(12 -6))) then local v139=0 + 0 ;local v140;local v141;while true do if (((1335 -(228 + 35))==1072) and (v139==(0 + 0))) then v140=1629 -(1505 + 124) ;v141=nil;v139=1 + 0 ;end if (((1 + 0)==v139) or ((732 + 3260)<(7623 -3689))) then while true do if (((1082 + 235)>=1209) and (v140==(0 -(1823 -(339 + 1484))))) then v141=v93[1 + 1 ];v91[v141](v14(v91,v141 + 1 ,v78));break;end end break;end end elseif (((5390 -(821 + 773))==((1874 + 2062) -(59 + 81))) and (v94==(7 + 0))) then local v174=0;local v175;while true do if ((((7708 -6038) -691)<=3807) and (v174==0)) then v175=v93[1 + (4 -3) ];do return v14(v91,v175,v78);end break;end end else v91[v93[(1209 -(708 + 492)) -7 ]]= #v91[v93[3 + 0 ]];end elseif ((v94<=((1828 -(574 + 1253)) + 8)) or ((3484 -(113 + 318))<(25 + 2062))) then local v142=0;local v143;local v144;local v145;local v146;local v147;while true do if (((0 -0)==v142) or ((5851 -4156)>2550)) then v143=v93[626 -(434 + 190) ];v144=v93[7 -3 ];v142=1 + 0 ;end if ((294<=(6673 -2414)) and (v142==2)) then for v258=2 -1 ,v144 do v91[v145 + v258 ]=v146[v258];end v147=v146[1 + 0 ];v142=610 -(244 + 30 + 333) ;end if ((v142==(3 + 0)) or (4458<(2025 -1376))) then if ((1401<(1700 -((293 -(181 + 14)) + 119))) and v147) then local v271=0 + 0 ;local v272;while true do if ((((1469 -857) + 1274)<=(371 + 4423)) and ((0 + 0)==v271)) then v272=(349 + 795) -(569 + 575) ;while true do if (((1716 -(116 + 719))<962) and (v272==(0 + 0))) then v91[v145]=v147;v77=v93[3];break;end end break;end end else v77=v77 + (2 -1) ;end break;end if ((v142==(3 -2)) or ((6636 -2584)<((2269 -1094) + 192))) then v145=v143 + 1 + 1 ;v146={v91[v143](v91[v143 + 1 + 0 + (1220 -(896 + 324)) ],v91[v145])};v142=696 -(519 + 175) ;end end elseif (((437 + 210)<=(191 + 3313)) and (v94==(33 -23))) then local v177=0 -0 ;local v178;while true do if ((((2398 -1265) -(418 + 23))<=(2368 + 2086)) and (v177==(0 -(0 + 0)))) then v178=v93[3 -1 ];v91[v178]=v91[v178](v14(v91,v178 + 1 ,v93[3]));break;end end else local v179=(1366 -(30 + 730)) -(583 + 23) ;local v180;local v181;local v182;while true do if (((4062 -(1493 + 37))<=(11328 -(8103 -(44 + 305)))) and (v179==(1 + 0))) then v182=nil;while true do if ((v180==(286 -(285 + 1))) or (((4650 -(374 + 1425)) -1275)==(3367 -(700 + 72)))) then local v310=0 -(0 -0) ;while true do if ((4700>(2612 -(140 + 189))) and (v310==(1951 -(1490 + 460)))) then v180=1371 -(1251 + 119) ;break;end if ((4967>=(452 + 59)) and (v310==(0 + 0))) then local v350=1356 -(32 + 1324) ;while true do if (((1289 + (894 -337))==1846) and (v350==(1 + 0))) then v310=1187 -(275 + 911) ;break;end if ((249<=(9343 -5756)) and (v350==(0 + 0))) then v181=v93[960 -(343 + 614) ];v182=v91[v181];v350=1 + 0 ;end end end end end if ((v180==(261 -((55 -25) + 230))) or ((3731 -2487)<(494 -(277 + 9)))) then for v330=v181 + 1 ,v93[4 + 0 ] do v182=v182   .. v91[v330] ;end v91[v93[1 + 1 ]]=v182;break;end end break;end if ((v179==(0 -0)) or ((1466 + 702)==4817)) then v180=0 + 0 ;v181=nil;v179=1090 -(1032 + 57) ;end end end elseif ((((1384 -807) -303)==274) and (v94<=17)) then if ((v94<=(47 -33)) or (4123==(206 + 132 + 8))) then if ((v94<=12) or ((11481 -8175)>=(13126 -8429))) then v77=v93[3];elseif ((v94>(1832 -(936 + 883))) or ((1582 + 1717)<3172)) then v91[v93[(14 -9) -3 ]][v93[2 + 1 ]]=v93[4];else v91[v93[(683 -(428 + 253)) -0 ]]();end elseif ((2128<(363 + 2166)) and (v94<=(12 + 3))) then v91[v93[1 + 0 + 1 ]]=v91[v93[3]]%v93[4] ;elseif (((4401 -(79 + 964))<=((3034 -2270) + 3978)) and (v94>(8 + 8))) then v91[v93[2 + 0 ]]=v43(v86[v93[1174 -(523 + 648) ]],nil,v46);else v91[v93[7 -5 ]]=v93[3] + v91[v93[498 -(396 + 98) ]] ;end elseif (((12330 -9715)<=(5383 -(74 + 1028))) and (v94<=20)) then if ((v94<=(1761 -(1490 + 253))) or ((3246 + 287)<=(53 + 2759))) then local v150=0;local v151;local v152;while true do if ((v150==(460 -(72 + 388))) or ((1554 -(241 + 26))==(7295 -4474))) then v151=0 + 0 ;v152=nil;v150=1 + 0 ;end if (((179 + 195 + 3754)==(14154 -(10270 -(11 + 233)))) and (v150==(1 + 0 + 0))) then while true do if (((8626 -3791)>=(518 + 4045)) and (v151==(0 + 0))) then v152=v93[2];v91[v152]=v91[v152](v91[v152 + 1 ]);break;end end break;end end elseif ((v94==(54 -35)) or ((439 -(396 + 35))>=(19847 -15407))) then if (((2904 -(526 + 105))>(852 + 843)) and  not v91[v93[1 + 1 ]]) then v77=v77 + 1 + (1196 -(944 + 252)) ;else v77=v93[6 -3 ];end else v91[v93[2]]=v91[v93[2 + (1 -0) ]]%v91[v93[2 + 2 ]] ;end elseif (((4452 -(770 + 504))>2665) and (v94<=(63 -41))) then if ((v94>(84 -63)) or ((4973 -(316 + 1170))==(265 + 748))) then v91[v93[3 -1 ]][v91[v93[3 + 0 ]]]=v91[v93[3 + 1 ]];elseif (((2598 -(2196 -(461 + 82)))<=((5707 + 230) -(940 + 416))) and (v91[v93[15 -(6 + 7) ]]==v91[v93[4]])) then v77=v77 + 1 ;else v77=v93[1019 -(878 + 138) ];end elseif ((v94==23) or ((2859 -(1223 + 456))==((2039 -(1130 + 824)) -(1879 -(212 + 1619))))) then local v190=0 + 0 ;local v191;local v192;local v193;local v194;local v195;local v196;while true do if (((162 + 61)<(2558 -1551)) and (v190==((1059 -(57 + 133)) -(323 + 546)))) then v191=0;v192=nil;v190=1 + (0 -0) ;end if ((v190==1) or ((4756 -(188 + 770))<=(179 + 334))) then v193=nil;v194=nil;v190=(678 -(5 + 14)) -(199 + 458) ;end if ((v190==(4 -1)) or (591>(403 + 2100))) then while true do if ((0==v191) or ((3180 -(832 + 294))<163)) then v192=0;v193=nil;v191=2 -1 ;end if ((2199==(3057 -(276 + 582))) and (v191==(895 -(569 + 324)))) then v196=nil;while true do if (((7059 -(10519 -6475))>(2558 + 355)) and (v192==2)) then for v361=v193,v78 do local v362=0;while true do if (((0 + 0)==v362) or (2222>(4584 -(359 + (1501 -(168 + 1210)))))) then v196=v196 + (1 -(0 -0)) ;v91[v361]=v194[v196];break;end end end break;end if ((v192==(0 -0)) or (((7414 -2407) -(131 + 463))<3371)) then local v351=0;local v352;while true do if (((0 + 0)==v351) or ((4173 -(4636 -2161))>(2895 -(77 + 194)))) then v352=1094 -(918 + 176) ;while true do if ((v352==((1 -0) + 0)) or ((1593 + 468)>(4238 + 677))) then v192=1 + 0 ;break;end if (((5967 -(684 + 1192))>3863) and (v352==(0 -0))) then local v408=0;while true do if (((197 -(164 + 32))==v408) or ((872 -(233 + 547))==(360 -216))) then v352=1783 -(626 + (2299 -1143)) ;break;end if (((1339 + 1043)>(740 + (2464 -1778))) and (v408==(0 + 0))) then v193=v93[2];v194,v195=v88(v91[v193](v14(v91,v193 + 1 + 0 ,v93[(541 -(285 + 253)) + 0 ])));v408=1 + 0 ;end end end end break;end end end if ((v192==(231 -(214 + (1275 -(1221 + 38))))) or (((5026 -(698 + 30)) -2507)>=(3638 -(295 + 502)))) then local v353=0;while true do if (((12499 -8396)>=(838 + 389)) and (v353==(1519 -(714 + 804)))) then v192=1 + 1 ;break;end if (((4370 -(131 + 230))<(14648 -10014)) and ((610 -(111 + 499))==v353)) then local v386=1524 -(227 + 1297) ;while true do if ((v386==(0 -0)) or ((7802 -(4125 -(83 + 877)))==(505 + 3068))) then v78=(v195 + v193) -1 ;v196=0 -0 ;v386=1 -0 ;end if (((1149 -(1122 + 26))==v386) or (((34054 -22296) -7518)<=(3825 -(217 + 239)))) then v353=246 -(28 + 217) ;break;end end end end end end break;end if (((16308 -12837)>(2910 -1672)) and (v191==((1010 -(760 + 249)) + 0))) then v194=nil;v195=nil;v191=2 -(0 -0) ;end end break;end if ((v190==(1 + 1)) or ((7040 -2304)==102)) then v195=nil;v196=nil;v190=3 + 0 ;end end else local v197=0;local v198;local v199;local v200;while true do if (((1 + (0 -0))==v197) or ((4242 -(1108 + 285))==(16765 -11934))) then v200=nil;while true do if (((13647 -9991)==3656) and (v198==(0 + 0))) then local v312=0;while true do if ((v312==((1 + 0) -0)) or ((798 + 54 + 189)>(4808 -3028))) then v198=1;break;end if ((2202==(10113 -7911)) and (v312==(0 + 0))) then v199=v93[522 -(374 + 146) ];v200={};v312=1;end end end if ((((504 -(226 + 276)) -1)==v198) or ((7377 -4427)==((7563 -5612) -(113 + 98 + 984)))) then for v331=4 -3 , #v90 do local v332=(2824 -(849 + 984)) -(139 + (2398 -1546)) ;local v333;while true do if (((2344 -(71 + (443 -337)))>(5283 -3568)) and (((0 -0) -0)==v332)) then v333=v90[v331];for v368=625 -(101 + 524) , #v333 do local v369=0 -(1914 -(1496 + 418)) ;local v370;local v371;local v372;local v373;while true do if ((v369==2) or ((3925 -2841)<=(1101 -(64 + 393)))) then while true do if ((v370==(1 + 0)) or ((7246 -4562)<=(2135 -841))) then v373=v371[4 -2 ];if (((1220 + 2120)>1190) and (v372==v91) and (v373>=v199)) then local v422=0 + (0 -0) ;local v423;local v424;while true do if ((v422==0) or (487<(1100 -846))) then v423=0 + 0 ;v424=nil;v422=330 -(48 + (798 -517)) ;end if (((3884 -(273 + 1570))<=(434 + 2998)) and (v422==(86 -(53 + 8 + 24)))) then while true do if ((v423==(0 + 0)) or ((1301 -694)==3319)) then v424=0 -0 ;while true do if ((2666==2666) and (0==v424)) then v200[v373]=v372[v373];v371[1 + 0 ]=v200;break;end end break;end end break;end end end break;end if ((4096>(3062 -(1455 + 243))) and (v370==(0 -0))) then v371=v333[v368];v372=v371[1 -0 ];v370=4 -3 ;end end break;end if (((3070 -(480 + 584))>=((5646 -(146 + 844)) -2865)) and (v369==(0 + 0))) then v370=666 -(586 + 80) ;v371=nil;v369=1;end if ((v369==(4 -3)) or ((3799 -(184 + 1734))>(497 + 3718))) then v372=nil;v373=nil;v369=1807 -(978 + 827) ;end end end break;end end end break;end end break;end if (((485 + 1184)==(508 + 107 + 1054)) and (v197==0)) then v198=(3332 -(569 + 787)) -(482 + (5242 -3748)) ;v199=nil;v197=1;end end end elseif ((899<(3037 -(3360 -(265 + 1445)))) and (v94<=(1444 -(767 + 641)))) then if (((793 + 3563)>1914) and (v94<=(771 -(323 + 418)))) then if ((1606==(2120 -(140 + 88 + 286))) and (v94<=(25 + 2))) then if ((v94<=(16 + 9)) or (1056>=(1894 -(31 + (498 -(73 + 258)))))) then local v153=0 + (0 -0) ;local v154;local v155;local v156;while true do if (((13450 -9227)>(15298 -11313)) and (v153==(1469 -(388 + 1081)))) then local v254=(729 + 197) -(830 + 96) ;while true do if ((v254==(2 -1)) or ((4918 -(1485 + 261))>(10943 -6332))) then v153=1 + 0 ;break;end if ((v254==(1645 -(857 + 788))) or ((568 + 2499)<(4217 -2549))) then v154=v93[1422 -((476 -(65 + 94)) + (2538 -1435)) ];v155=v91[v154 + 1 + 1 ];v254=1 -0 ;end end end if (((2964 -(781 + 572))>=(1317 -(207 + 636))) and (v153==(3 -1))) then if ((3962>=(33 + (1597 -(512 + 1050)))) and (v155>(0 -0))) then if ((v156<=v91[v154 + 1 ]) or ((5526 -3274)==(5110 -(467 + 52 + 21)))) then local v306=0 -0 ;local v307;while true do if ((v306==((115 -(53 + 62)) + 0)) or ((685 + 164)>2073)) then v307=0 + (0 -0) ;while true do if ((v307==(668 -(568 + 100))) or ((12469 -9153)<(2492 -(183 + 292)))) then v77=v93[4 -(1 + 0) ];v91[v154 + 2 + 1 ]=v156;break;end end break;end end end elseif ((v156>=v91[v154 + ((2 + 0) -(1 + 0)) ]) or (3776<286)) then local v308=0 + 0 ;while true do if ((((8925 -(212 + 760)) -6213)<=(1847 + 2348)) and ((0 -0)==v308)) then v77=v93[8 -5 ];v91[v154 + (1065 -(520 + 542)) ]=v156;break;end end end break;end if (((2 -1)==v153) or ((7246 -3733)==2310)) then v156=v91[v154] + v155 ;v91[v154]=v156;v153=2;end end elseif ((v94==(1095 -(798 + (1187 -(295 + 621))))) or (57==(5089 -(401 + 20)))) then local v201=0 -(902 -(723 + 179)) ;local v202;local v203;while true do if ((v201==(1 + 0)) or ((8886 -5165)<=(2405 -1677))) then while true do if ((v202==(0 -0)) or ((334 + 975)>3771)) then v203=v93[2];v91[v203]=v91[v203](v14(v91,v203 + (2 -1) ,v78));break;end end break;end if ((v201==0) or ((3249 -2127)>=((4269 -(1050 + 784)) + 27))) then local v275=0;while true do if ((v275==1) or ((2555 -(145 + 858))>=(3638 -(863 + 56)))) then v201=1;break;end if (((302 -(79 + 223))==v275) or ((5263 -1098)<3104)) then v202=0;v203=nil;v275=1827 -(427 + 1399) ;end end end end else v91[v93[2]]={};end elseif ((136<(10457 -6498)) and (v94<=(14 + 14))) then if ((v91[v93[2 + 0 ]]==v93[4]) or ((3454 -(757 + 154))==(4825 -(138 + 1162)))) then v77=v77 + 1 + 0 ;else v77=v93[3];end elseif ((v94==(289 -(130 + 130))) or ((3062 + 650)<(8857 -6845))) then v91[v93[2 + 0 ]][v93[7 -4 ]]=v91[v93[4]];else local v208=(0 -0) + 0 ;local v209;local v210;while true do if (((8348 -4915)<=4471) and (v208==(336 -(245 + 91)))) then v209=0 + 0 ;v210=nil;v208=830 -(365 + 464) ;end if (((113 + 945)==(2996 -1938)) and (v208==(1980 -(1853 + 126)))) then while true do if ((4300<=4495) and (v209==(0 -0))) then v210=v93[1970 -(1257 + 711) ];v91[v210](v14(v91,v210 + (262 -(53 + 208)) ,v93[3]));break;end end break;end end end elseif (((3812 -2037)==(932 + 843)) and (v94<=(24 + 9))) then if (((2459 -(1370 -(315 + 474)))>(2414 -(1228 + 40))) and (v94<=(1922 -(715 + 1176)))) then v91[v93[3 -1 ]]=v91[v93[9 -(23 -17) ]] + v93[2 + 2 ] ;elseif ((v94>(1237 -(867 + 338))) or ((3019 -(1066 + 324))==(10830 -6467))) then if (v91[v93[345 -(327 + 16) ]] or ((2788 + 458)<=(7916 -4967))) then v77=v77 + 1 + 0 ;else v77=v93[5 -2 ];end else local v211=0 -(0 -0) ;local v212;local v213;local v214;local v215;while true do if (((0 -0)==v211) or ((3624 -(141 + 264 + 703))>=2536)) then local v276=1870 -(940 + 930) ;while true do if (((3685 + 404 + 191)>(432 + 687)) and ((57 -(42 + 15))==v276)) then v212=0;v213=nil;v276=1 + 0 ;end if (((3598 -(266 + 382))>=(1978 -(1337 + 562))) and (v276==(1178 -((2420 -(363 + 1315)) + 435)))) then v211=(958 -(864 + 93)) + 0 ;break;end end end if ((v211==(5 -3)) or ((2701 -(164 + 772))>=1966)) then while true do if (((4783 -2581)<(14673 -11022)) and ((1063 -(621 + 442))==v212)) then local v316=0 -0 ;while true do if (((9939 -6583)>780) and (v316==(1632 -(1009 + 623)))) then v213=v86[v93[4 -1 ]];v214=nil;v316=1878 -(262 + 1615) ;end if ((v316==(1 + 0)) or ((3571 -(198 + (755 -338)))<=1276)) then v212=1 + 0 ;break;end end end if ((v212==1) or ((6605 -(384 + 1367))==(4798 -(1411 + 99)))) then local v317=0;while true do if (((4035 -(10 + 1573))==2452) and (v317==(617 -(110 + 506)))) then v212=1925 -(82 + 1841) ;break;end if (((3726 -(64 + 178 + 874))>=(2476 -1528)) and (v317==(0 -0))) then local v356=0 + 0 ;while true do if ((v356==(0 -0)) or ((3925 -(181 + 1694))==(4065 -(136 + 1746)))) then v215={};v214=v11({},{__index=function(v387,v388)local v395=1845 -(1742 + 103) ;local v396;while true do if (((5350 -2080)==3270) and (v395==0)) then v396=v215[v388];return v396[1063 -(826 + 236) ][v396[5 -3 ]];end end end,__newindex=function(v387,v388,v389)local v397=0 -0 ;local v398;local v399;while true do if (((3640 -(795 + 914))<(7303 -3302)) and (v397==(1 + 0))) then while true do if ((v398==(0 -0)) or ((1469 + 3065)==(2756 -(136 + 65)))) then v399=v215[v388];v399[1][v399[6 -4 ]]=v389;break;end end break;end if (((1454 -(56 + 8))<=(3571 -1928)) and (v397==(0 + 0))) then v398=465 -(31 + 434) ;v399=nil;v397=1469 -(1396 + (1889 -(1404 + 413))) ;end end end});v356=(7 -5) -1 ;end if (((8962 -5854)<=(6719 -2175)) and (v356==(2 -1))) then v317=1 -0 ;break;end end end end end if (((852 + 3369)==(1776 + 1926 + 519)) and (v212==2)) then for v334=1775 -(416 + 1358) ,v93[4] do local v335=1278 -(243 + 1035) ;local v336;local v337;while true do if (((382 + 178)==560) and (v335==(1 -0))) then while true do if ((v336==(380 -(14 + 300 + 66))) or ((4200 -((484 -(299 + 75)) + 134))<=(1904 -1043))) then local v400=0;while true do if ((v400==0) or ((4756 -2959)<(49 + 748))) then v77=v77 + (1512 -(1023 + 488)) ;v337=v85[v77];v400=1 + 0 ;end if (((2177 -(184 + 811))<1987) and (1==v400)) then v336=(6266 -4911) -(1206 + 148) ;break;end end end if ((v336==(1675 -(898 + 776))) or (2855==(3280 -(778 + 145)))) then if ((1061==1061) and (v337[1]==((589 + 560) -((667 -(58 + 36)) + 531)))) then v215[v334-(1 + 0) ]={v91,v337[3]};else v215[v334-(1740 -(968 + 771)) ]={v45,v337[8 -5 ]};end v90[ #v90 + (3 -(1662 -(593 + 1067))) ]=v215;break;end end break;end if (((1350 -(57 + 538))<(1356 + 1146)) and ((0 -0)==v335)) then v336=0;v337=nil;v335=1 + 0 ;end end end v91[v93[5 -3 ]]=v43(v213,v214,v46);break;end end break;end if ((v211==(493 -(114 + 378))) or ((1266 + 801)<(851 -(127 + 621)))) then local v277=0 + 0 ;while true do if (((864 + 1224)==((8181 -(380 + 1037)) -4676)) and (v277==1)) then v211=2;break;end if (((1134 + 3528)==(12052 -7390)) and (v277==(1720 -(454 + 1266)))) then v214=nil;v215=nil;v277=1 + 0 ;end end end end end elseif ((4010==(7543 -3533)) and (v94<=(34 + 0))) then do return;end elseif (((26 + (145 -83))<3402) and (v94==35)) then local v216=0 -0 ;local v217;local v218;local v219;local v220;while true do if ((v216==2) or (3401<(1632 + 612))) then while true do if ((v217==(0 -0)) or (2728==(1025 -580))) then local v319=570 -(50 + 520) ;while true do if (((1699 -1039)>=(553 -330)) and (v319==1)) then v217=1 + 0 ;break;end if ((v319==(1608 -(12 + 1596))) or ((3087 + 108)<(1842 + 118))) then v218=v93[2 + (0 -0) ];v219=v91[v218];v319=1 + 0 ;end end end if ((1==v217) or (2170<(13 + 412))) then v220=v91[v218 + (1702 -(65 + 1635)) ];if ((v220>(0 -(0 + 0))) or ((9496 -4641)<=1549)) then if ((v219>v91[v218 + 1 + 0 ]) or ((297 + 36)>(2494 -((3550 -2277) + 6)))) then v77=v93[4 -1 ];else v91[v218 + (956 -(729 + (322 -98))) ]=v219;end elseif ((v219<v91[v218 + (1 -(1740 -(995 + 745))) ]) or ((6503 -(1209 + 569))<(3147 -(738 + 432 + 275)))) then v77=v93[9 -6 ];else v91[v218 + (1295 -(960 + 332)) ]=v219;end break;end end break;end if ((1==v216) or ((2392 -(505 + 1002))>=(17382 -12521))) then v219=nil;v220=nil;v216=2 + 0 ;end if ((v216==(0 + 0)) or (((6505 -(1141 + 245)) -3888)==(13775 -10278))) then v217=0;v218=nil;v216=1 + 0 ;end end else local v221=0 -0 ;local v222;local v223;while true do if ((v221==(0 -0)) or ((1156 -(606 + 105))>=(916 + (1751 -(1326 + 257))))) then v222=503 -(142 + 361) ;v223=nil;v221=1735 -(259 + 40 + 1435) ;end if (((5935 -(1703 + 134))>(3106 -(1010 + 495))) and (v221==(1 -0))) then while true do if ((v222==(811 -(337 + 474))) or (((1764 + 221) -(98 + (947 -453)))>=(6148 -(258 + 1567)))) then v223=v91[v93[21 -(10 + 7) ]];if (((1591 -773)==(2123 -(1007 + 298))) and  not v223) then v77=v77 + (764 -(488 + 275)) ;else local v343=0 + 0 ;while true do if ((v343==(0 + 0)) or ((5245 -(87 + 295))<=(522 + 121))) then v91[v93[2]]=v223;v77=v93[11 -8 ];break;end end end break;end end break;end end end elseif ((v94<=(1389 -(84 + 1027 + 236))) or ((10090 -6402)<(2550 -(990 + 164)))) then if ((v94<=(28 + 11)) or ((274 + 166)==(4839 -2294))) then if ((1006<((2516 + 1554) -(135 + 176))) and (v94<=(1247 -(799 + (683 -(14 + 258)))))) then local v158=0 + 0 ;local v159;local v160;local v161;while true do if ((1==v158) or ((652 + 35)>=(11846 -(6492 + 713)))) then v161=v93[3];for v264=1964 -(846 + 1117) ,v161 do v160[v264]=v91[v159 + v264 ];end break;end if (((3370 -(685 + 243))>=(953 + 638)) and (v158==(0 + 0))) then local v257=0 + 0 ;while true do if (((152 + 593)<=(34 + 27 + 1438)) and (v257==(1173 -(24 + 1149)))) then v159=v93[2];v160=v91[v159];v257=1 -0 ;end if (((4312 -1472)<3847) and (v257==(1 + 0))) then v158=312 -(301 + 10) ;break;end end end end elseif (((1385 -(707 + 102))<2782) and (v94==(13 + 25))) then v91[v93[5 -3 ]]=v91[v93[3]] -v93[7 -3 ] ;else v91[v93[6 -4 ]]=v93[3 -0 ];end elseif (((3180 -(45 + 186))>=(3649 -2686)) and (v94<=(725 -(467 + 218)))) then v91[v93[1 + 1 ]]=v93[1191 -(598 + 590) ]~=(227 -(177 + 50)) ;elseif ((v94==41) or ((47 + 3220)==(906 -((700 -(35 + 263)) + 274)))) then if (((274 + 592)>=(802 -287)) and (v93[2]==v91[v93[4]])) then v77=v77 + (178 -(107 + 70)) ;else v77=v93[3 -0 ];end else local v227=0 + 0 + 0 ;local v228;local v229;while true do if ((v227==(1 -0)) or ((7621 -(4685 -(178 + 295)))>=(2194 + 1231))) then while true do if ((v228==(0 + 0)) or ((3860 -(111 + 57))==(4678 -(41 + 97)))) then v229=v93[2];do return v91[v229](v14(v91,v229 + (1467 -(979 + 487)) ,v93[3]));end break;end end break;end if (((7792 -(9914 -5206))==(1262 + 1822)) and (v227==(0 + 0))) then v228=0 -0 ;v229=nil;v227=1;end end end elseif ((v94<=(121 -76)) or (2118>=4440)) then if (((3112 -(412 + 507))<(3800 -(194 + 73))) and (v94<=(7 + (1431 -(537 + 858))))) then v91[v93[4 -2 ]]=v45[v93[37 -(28 + 6) ]];elseif ((v94>44) or ((5495 -3159)==(2663 -2080))) then v91[v93[2]]=v91[v93[(282 + 68) -(28 + 319) ]];else local v232=0;local v233;local v234;local v235;local v236;while true do if ((v232==(4 -3)) or (((1643 -(224 + 1376)) -32)==4411)) then v235=nil;v236=nil;v232=2;end if ((v232==(4 -2)) or ((548 -347)>=((17257 -(619 + 53)) -13033))) then while true do if ((v233==(0 -0)) or ((1848 -(615 + 76))>=((3881 -(1500 + 441)) -(635 + 117)))) then v234=v93[2 -0 ];v235={v91[v234](v91[v234 + (3 -2) ])};v233=1 -0 ;end if ((v233==(1 + 0)) or ((4466 -((2336 -(1639 + 319)) + 97 + 220))>(22396 -17623))) then v236=1180 -(1015 + 165) ;for v338=v234,v93[3 + 1 ] do local v339=0 -0 ;local v340;while true do if ((v339==(0 -(0 -0))) or ((4823 -((1599 -(690 + 283)) + (876 -334)))>=(3007 + 1268))) then v340=0;while true do if ((v340==(0 + 0)) or ((5519 -(7156 -4765))<2437)) then v236=v236 + (2 -1) ;v91[v338]=v235[v236];break;end end break;end end end break;end end break;end if (((0 + 0)==v232) or ((2717 + 800)<(711 + 755 + 61))) then v233=0;v234=nil;v232=1 + 0 ;end end end elseif ((v94<=((33 + 422) -(62 + 346))) or ((2858 -(1341 + 555))>=(13196 -8899))) then if ((v94==46) or (2629<2605)) then local v237=0 -0 ;local v238;local v239;while true do if ((v237==((666 -(282 + 382)) -1)) or (2886==(3011 -(45 + 349)))) then v91[v238 + 1 + 0 ]=v239;v91[v238]=v239[v93[1 + 3 ]];break;end if ((v237==(888 -(746 + 142))) or ((857 + 2813 + 878)<=(4216 + 197))) then v238=v93[5 -3 ];v239=v91[v93[2 + 1 ]];v237=1 -0 ;end end else local v240=0 + 0 ;local v241;local v242;while true do if (((6 + 1)<=(5015 -2371)) and (v240==(0 + 0))) then v241=0 + 0 ;v242=nil;v240=(325 + 342) -((1111 -650) + 205) ;end if ((((1543 -(460 + 1081)) -1)==v240) or ((4047 -(86 + 154))<(702 -209))) then while true do if ((v241==(0 + 0)) or ((123 + 94)>=(3542 -(722 + 517)))) then v242=v93[948 -(492 + 454) ];v91[v242](v91[v242 + (3 -2) ]);break;end end break;end end end elseif ((v94==(22 + 26)) or ((769 + 3191)<=(4108 -(338 + 144 + 228)))) then local v243=0 -0 ;local v244;local v245;while true do if (((1097 -(239 + 68))<=(2413 + 999)) and (v243==0)) then v244=681 -(612 + 69) ;v245=nil;v243=193 -(126 + 66) ;end if (((1128 -(948 + 179))==v243) or ((20671 -15857)==3609)) then while true do if (((1245 + 1264)>(1958 -861)) and (v244==(1220 -(675 + 545)))) then v245=v93[2];v91[v245]=v91[v245]();break;end end break;end end else v91[v93[2]]=v46[v93[3]];end v77=v77 + (1 -(1227 -(498 + 729))) ;break;end end break;end end end end A,B=v41(v12(v81));if  not A[1] then local v98=0;local v99;while true do if (0==v98) then v99=v44[4][v77] or "?" ;error("Script error at ["   .. v99   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end
